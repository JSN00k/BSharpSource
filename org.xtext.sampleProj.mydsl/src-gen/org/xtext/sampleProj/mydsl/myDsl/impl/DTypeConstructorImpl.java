/**
 * generated by Xtext 2.13.0
 */
package org.xtext.sampleProj.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.sampleProj.mydsl.myDsl.DTypeConstructor;
import org.xtext.sampleProj.mydsl.myDsl.MyDslPackage;
import org.xtext.sampleProj.mydsl.myDsl.TypedVariableList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>DType Constructor</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.sampleProj.mydsl.myDsl.impl.DTypeConstructorImpl#getDecons <em>Decons</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DTypeConstructorImpl extends DatatypeConstructorImpl implements DTypeConstructor
{
  /**
   * The cached value of the '{@link #getDecons() <em>Decons</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDecons()
   * @generated
   * @ordered
   */
  protected TypedVariableList decons;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DTypeConstructorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.DTYPE_CONSTRUCTOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypedVariableList getDecons()
  {
    return decons;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDecons(TypedVariableList newDecons, NotificationChain msgs)
  {
    TypedVariableList oldDecons = decons;
    decons = newDecons;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.DTYPE_CONSTRUCTOR__DECONS, oldDecons, newDecons);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDecons(TypedVariableList newDecons)
  {
    if (newDecons != decons)
    {
      NotificationChain msgs = null;
      if (decons != null)
        msgs = ((InternalEObject)decons).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DTYPE_CONSTRUCTOR__DECONS, null, msgs);
      if (newDecons != null)
        msgs = ((InternalEObject)newDecons).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DTYPE_CONSTRUCTOR__DECONS, null, msgs);
      msgs = basicSetDecons(newDecons, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DTYPE_CONSTRUCTOR__DECONS, newDecons, newDecons));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.DTYPE_CONSTRUCTOR__DECONS:
        return basicSetDecons(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.DTYPE_CONSTRUCTOR__DECONS:
        return getDecons();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.DTYPE_CONSTRUCTOR__DECONS:
        setDecons((TypedVariableList)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DTYPE_CONSTRUCTOR__DECONS:
        setDecons((TypedVariableList)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DTYPE_CONSTRUCTOR__DECONS:
        return decons != null;
    }
    return super.eIsSet(featureID);
  }

} //DTypeConstructorImpl
