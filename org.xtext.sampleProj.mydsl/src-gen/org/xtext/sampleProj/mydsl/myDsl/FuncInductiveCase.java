/**
 * generated by Xtext 2.13.0
 */
package org.xtext.sampleProj.mydsl.myDsl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Func Inductive Case</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.sampleProj.mydsl.myDsl.FuncInductiveCase#getDeconName <em>Decon Name</em>}</li>
 *   <li>{@link org.xtext.sampleProj.mydsl.myDsl.FuncInductiveCase#getExpre <em>Expre</em>}</li>
 * </ul>
 *
 * @see org.xtext.sampleProj.mydsl.myDsl.MyDslPackage#getFuncInductiveCase()
 * @model
 * @generated
 */
public interface FuncInductiveCase extends EObject
{
  /**
   * Returns the value of the '<em><b>Decon Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Decon Name</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Decon Name</em>' reference.
   * @see #setDeconName(DTypeConstructor)
   * @see org.xtext.sampleProj.mydsl.myDsl.MyDslPackage#getFuncInductiveCase_DeconName()
   * @model
   * @generated
   */
  DTypeConstructor getDeconName();

  /**
   * Sets the value of the '{@link org.xtext.sampleProj.mydsl.myDsl.FuncInductiveCase#getDeconName <em>Decon Name</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Decon Name</em>' reference.
   * @see #getDeconName()
   * @generated
   */
  void setDeconName(DTypeConstructor value);

  /**
   * Returns the value of the '<em><b>Expre</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Expre</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expre</em>' containment reference.
   * @see #setExpre(Expression)
   * @see org.xtext.sampleProj.mydsl.myDsl.MyDslPackage#getFuncInductiveCase_Expre()
   * @model containment="true"
   * @generated
   */
  Expression getExpre();

  /**
   * Sets the value of the '{@link org.xtext.sampleProj.mydsl.myDsl.FuncInductiveCase#getExpre <em>Expre</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Expre</em>' containment reference.
   * @see #getExpre()
   * @generated
   */
  void setExpre(Expression value);

} // FuncInductiveCase
