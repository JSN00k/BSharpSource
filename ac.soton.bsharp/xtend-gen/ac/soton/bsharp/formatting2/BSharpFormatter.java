/**
 * generated by Xtext 2.14.0
 */
package ac.soton.bsharp.formatting2;

import ac.soton.bsharp.bSharp.DomainModel;
import ac.soton.bsharp.bSharp.TopLevel;
import ac.soton.bsharp.services.BSharpGrammarAccess;
import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class BSharpFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private BSharpGrammarAccess _bSharpGrammarAccess;
  
  protected void _format(final DomainModel domainModel, @Extension final IFormattableDocument document) {
    EList<TopLevel> _elements = domainModel.getElements();
    for (final TopLevel topLevel : _elements) {
      document.<TopLevel>format(topLevel);
    }
  }
  
  public void format(final Object domainModel, final IFormattableDocument document) {
    if (domainModel instanceof XtextResource) {
      _format((XtextResource)domainModel, document);
      return;
    } else if (domainModel instanceof DomainModel) {
      _format((DomainModel)domainModel, document);
      return;
    } else if (domainModel instanceof EObject) {
      _format((EObject)domainModel, document);
      return;
    } else if (domainModel == null) {
      _format((Void)null, document);
      return;
    } else if (domainModel != null) {
      _format(domainModel, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(domainModel, document).toString());
    }
  }
}
