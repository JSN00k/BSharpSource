---------- Scoping ---------------

1)	When inside a subtype fix the scoping so elements from the super type can be used without errors. 
2) 	Deal With Constructed types in some meaningful way.
3) 	Check that when a constructed type is passed as a supertype that it is the only supertype (I think), 
	either way more needs to be thought out on this concept.
4)  To get stuff working I allowed unicode characters in expression, unfortunately This means that I have
    to have spaces between special characters like quantifiers and variable names, this is an irritation.
5)  Follow the instructions from the book into how to make the Main lib available from outside of eclipse.
	(This may not be necessary if we think that we're never going to use it outside of eclipse).
	
-------------- IMPLEMENT ME!!--------------
These TODOs are requirements that have been put off due to time constraints, They need Implementing
1)  In FileCompiler compileTypeConstructor(TypeConstructor constr) currently only handles simple types
	it needs to be able to handle constructed types, this can be done after I implement generating 
	type constructors.
2)	Imports and scoping. When a file is imported it doesn't scope from the files that the import imports.
3) Change the way the Type classes work so they are also constructive rather than destructive.
4) Infix implementations to pass them as a function, wrap them in brackets. when found in an expression
	tree without brackets set the arguments to left and right.
-------------- Validation -----------------
Due to time constraints insufficient work has been done on validation, allowing invalid statements
to get through to the compilation stage, this potentially allows impossible statements to be compiled.
Fortunately these will probably give errors in Event-B, but it would be nice to catch them earlier.

 1) When there are multiple supertypes they should all have a shared common ancestor, and should not
 	have additional variables added to them. This needs to be checked in the verification stage which 
 	it currently isn't