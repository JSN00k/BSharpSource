/**
 * generated by Xtext 2.14.0
 */
package ac.soton.bsharp.bSharp;

import java.util.Set;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;

import ac.soton.bsharp.bSharp.util.EventBFQNImport;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Import</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link ac.soton.bsharp.bSharp.Import#getFileImports <em>File Imports</em>}</li>
 * </ul>
 *
 * @see ac.soton.bsharp.bSharp.BSharpPackage#getImport()
 * @model abstract="true"
 * @generated
 */
public interface Import extends EObject {

	/**
	 * Returns the value of the '<em><b>File Imports</b></em>' containment reference list.
	 * The list contents are of type {@link ac.soton.bsharp.bSharp.FileImport}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>File Imports</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>File Imports</em>' containment reference list.
	 * @see ac.soton.bsharp.bSharp.BSharpPackage#getImport_FileImports()
	 * @model containment="true"
	 * @generated
	 */
	EList<FileImport> getFileImports();

	void addAllImportFqnsToNewImports(Set<EventBFQNImport> alreadyImported, Set<EventBFQNImport> newImports);
	
	String getBSharpProjName();

	/* This is called when we're going to add an element to the newImports, it adds anything that it has already
	 * imported to the alreadyImported set. If the element being added to the alreadyImported set is in the
	 * newImports set it is removed from the newImports set.
	 */
	void addAllElementsToAlreadyImported(Set<EventBFQNImport> alreadyImported, Set<EventBFQNImport> newImports);

	
} // Import
