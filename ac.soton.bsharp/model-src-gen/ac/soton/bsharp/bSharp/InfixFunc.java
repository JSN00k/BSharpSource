/**
 * generated by Xtext 2.14.0
 */
package ac.soton.bsharp.bSharp;

import ac.soton.bsharp.bSharp.util.ExprPredEnum;
import ac.soton.bsharp.bSharp.util.Tuple2;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Infix Func</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link ac.soton.bsharp.bSharp.InfixFunc#getPrecedence <em>Precedence</em>}</li>
 * </ul>
 *
 * @see ac.soton.bsharp.bSharp.BSharpPackage#getInfixFunc()
 * @model abstract="true"
 * @generated
 */
public interface InfixFunc extends ExpressionVariable {
	/**
	 * Returns the value of the '<em><b>Precedence</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Precedence</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Precedence</em>' attribute.
	 * @see #setPrecedence(int)
	 * @see ac.soton.bsharp.bSharp.BSharpPackage#getInfixFunc_Precedence()
	 * @model
	 * @generated
	 */
	int getPrecedence();

	/**
	 * Sets the value of the '{@link ac.soton.bsharp.bSharp.InfixFunc#getPrecedence <em>Precedence</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Precedence</em>' attribute.
	 * @see #getPrecedence()
	 * @generated
	 */
	void setPrecedence(int value);

	String eventBName(ExprPredEnum exprPred) throws Exception;

	ExprPredEnum compilationResultType(ExprPredEnum desiredType);

	String latexName();

	boolean hasEventBInfixOp();

	Tuple2<ExprPredEnum, ExprPredEnum> infixArgumentExprPredTypes();

	Integer bSharpPrecedence();
	
} // InfixFunc
