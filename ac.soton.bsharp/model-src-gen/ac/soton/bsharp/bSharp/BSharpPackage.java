/**
 * generated by Xtext 2.14.0
 */
package ac.soton.bsharp.bSharp;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see ac.soton.bsharp.bSharp.BSharpFactory
 * @model kind="package"
 * @generated
 */
public interface BSharpPackage extends EPackage {
	/**
	 * The package name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNAME = "bSharp";

	/**
	 * The package namespace URI.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_URI = "http://www.soton.ac/bsharp/BSharp";

	/**
	 * The package namespace name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_PREFIX = "bSharp";

	/**
	 * The singleton instance of the package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	BSharpPackage eINSTANCE = ac.soton.bsharp.bSharp.impl.BSharpPackageImpl.init();

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.DomainModelImpl <em>Domain Model</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.DomainModelImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getDomainModel()
	 * @generated
	 */
	int DOMAIN_MODEL = 0;

	/**
	 * The feature id for the '<em><b>Elements</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOMAIN_MODEL__ELEMENTS = 0;

	/**
	 * The number of structural features of the '<em>Domain Model</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOMAIN_MODEL_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TopLevelImpl <em>Top Level</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TopLevelImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTopLevel()
	 * @generated
	 */
	int TOP_LEVEL = 1;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL__NAME = 0;

	/**
	 * The feature id for the '<em><b>Imports</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL__IMPORTS = 1;

	/**
	 * The feature id for the '<em><b>Classes</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL__CLASSES = 2;

	/**
	 * The feature id for the '<em><b>Extends</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL__EXTENDS = 3;

	/**
	 * The feature id for the '<em><b>Instances</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL__INSTANCES = 4;

	/**
	 * The number of structural features of the '<em>Top Level</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL_FEATURE_COUNT = 5;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.ImportStatementImpl <em>Import Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.ImportStatementImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getImportStatement()
	 * @generated
	 */
	int IMPORT_STATEMENT = 2;

	/**
	 * The feature id for the '<em><b>Imports</b></em>' attribute list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_STATEMENT__IMPORTS = 0;

	/**
	 * The number of structural features of the '<em>Import Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_STATEMENT_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.ClassDeclImpl <em>Class Decl</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.ClassDeclImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getClassDecl()
	 * @generated
	 */
	int CLASS_DECL = 3;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.BppClassImpl <em>Bpp Class</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.BppClassImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getBppClass()
	 * @generated
	 */
	int BPP_CLASS = 4;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.NamedObjectImpl <em>Named Object</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.NamedObjectImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getNamedObject()
	 * @generated
	 */
	int NAMED_OBJECT = 41;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_OBJECT__NAME = 0;

	/**
	 * The number of structural features of the '<em>Named Object</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_OBJECT_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.GenNameImpl <em>Gen Name</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.GenNameImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getGenName()
	 * @generated
	 */
	int GEN_NAME = 5;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int GEN_NAME__NAME = NAMED_OBJECT__NAME;

	/**
	 * The number of structural features of the '<em>Gen Name</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int GEN_NAME_FEATURE_COUNT = NAMED_OBJECT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DECL__NAME = GEN_NAME__NAME;

	/**
	 * The feature id for the '<em><b>Context</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DECL__CONTEXT = GEN_NAME_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Body Elements</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DECL__BODY_ELEMENTS = GEN_NAME_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Class Decl</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DECL_FEATURE_COUNT = GEN_NAME_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BPP_CLASS__NAME = CLASS_DECL__NAME;

	/**
	 * The feature id for the '<em><b>Context</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BPP_CLASS__CONTEXT = CLASS_DECL__CONTEXT;

	/**
	 * The feature id for the '<em><b>Body Elements</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BPP_CLASS__BODY_ELEMENTS = CLASS_DECL__BODY_ELEMENTS;

	/**
	 * The feature id for the '<em><b>Supertypes</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BPP_CLASS__SUPERTYPES = CLASS_DECL_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Var List</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BPP_CLASS__VAR_LIST = CLASS_DECL_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Where</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BPP_CLASS__WHERE = CLASS_DECL_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Bpp Class</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BPP_CLASS_FEATURE_COUNT = CLASS_DECL_FEATURE_COUNT + 3;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.PolymorphicTypeNameImpl <em>Polymorphic Type Name</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.PolymorphicTypeNameImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPolymorphicTypeName()
	 * @generated
	 */
	int POLYMORPHIC_TYPE_NAME = 6;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POLYMORPHIC_TYPE_NAME__NAME = GEN_NAME__NAME;

	/**
	 * The number of structural features of the '<em>Polymorphic Type Name</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POLYMORPHIC_TYPE_NAME_FEATURE_COUNT = GEN_NAME_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.PolyContextImpl <em>Poly Context</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.PolyContextImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPolyContext()
	 * @generated
	 */
	int POLY_CONTEXT = 7;

	/**
	 * The feature id for the '<em><b>Poly Types</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POLY_CONTEXT__POLY_TYPES = 0;

	/**
	 * The number of structural features of the '<em>Poly Context</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POLY_CONTEXT_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.PolyContextTypesImpl <em>Poly Context Types</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.PolyContextTypesImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPolyContextTypes()
	 * @generated
	 */
	int POLY_CONTEXT_TYPES = 8;

	/**
	 * The feature id for the '<em><b>Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POLY_CONTEXT_TYPES__NAME = 0;

	/**
	 * The feature id for the '<em><b>Constraints</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POLY_CONTEXT_TYPES__CONSTRAINTS = 1;

	/**
	 * The number of structural features of the '<em>Poly Context Types</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POLY_CONTEXT_TYPES_FEATURE_COUNT = 2;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.PolyTypeConstraintsImpl <em>Poly Type Constraints</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.PolyTypeConstraintsImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPolyTypeConstraints()
	 * @generated
	 */
	int POLY_TYPE_CONSTRAINTS = 9;

	/**
	 * The feature id for the '<em><b>Type Name</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POLY_TYPE_CONSTRAINTS__TYPE_NAME = 0;

	/**
	 * The number of structural features of the '<em>Poly Type Constraints</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POLY_TYPE_CONSTRAINTS_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.SuperTypeListImpl <em>Super Type List</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.SuperTypeListImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getSuperTypeList()
	 * @generated
	 */
	int SUPER_TYPE_LIST = 10;

	/**
	 * The feature id for the '<em><b>Super Type</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_TYPE_LIST__SUPER_TYPE = 0;

	/**
	 * The number of structural features of the '<em>Super Type List</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_TYPE_LIST_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.ConstructedTypeImpl <em>Constructed Type</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.ConstructedTypeImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getConstructedType()
	 * @generated
	 */
	int CONSTRUCTED_TYPE = 12;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypeConstructorImpl <em>Type Constructor</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypeConstructorImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeConstructor()
	 * @generated
	 */
	int TYPE_CONSTRUCTOR = 11;

	/**
	 * The feature id for the '<em><b>Type Name</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_CONSTRUCTOR__TYPE_NAME = 0;

	/**
	 * The feature id for the '<em><b>Context</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_CONSTRUCTOR__CONTEXT = 1;

	/**
	 * The number of structural features of the '<em>Type Constructor</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_CONSTRUCTOR_FEATURE_COUNT = 2;

	/**
	 * The feature id for the '<em><b>Type</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONSTRUCTED_TYPE__TYPE = 0;

	/**
	 * The feature id for the '<em><b>Constructors</b></em>' attribute list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONSTRUCTED_TYPE__CONSTRUCTORS = 1;

	/**
	 * The number of structural features of the '<em>Constructed Type</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONSTRUCTED_TYPE_FEATURE_COUNT = 2;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypeDeclContextImpl <em>Type Decl Context</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypeDeclContextImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeDeclContext()
	 * @generated
	 */
	int TYPE_DECL_CONTEXT = 13;

	/**
	 * The feature id for the '<em><b>Type Name</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECL_CONTEXT__TYPE_NAME = 0;

	/**
	 * The number of structural features of the '<em>Type Decl Context</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECL_CONTEXT_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypeStructureImpl <em>Type Structure</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypeStructureImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeStructure()
	 * @generated
	 */
	int TYPE_STRUCTURE = 14;

	/**
	 * The feature id for the '<em><b>Variables</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_STRUCTURE__VARIABLES = 0;

	/**
	 * The number of structural features of the '<em>Type Structure</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_STRUCTURE_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.WhereImpl <em>Where</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.WhereImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getWhere()
	 * @generated
	 */
	int WHERE = 15;

	/**
	 * The feature id for the '<em><b>Expessions</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHERE__EXPESSIONS = 0;

	/**
	 * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHERE__EXPRESSIONS = 1;

	/**
	 * The number of structural features of the '<em>Where</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHERE_FEATURE_COUNT = 2;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.DatatypeImpl <em>Datatype</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.DatatypeImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getDatatype()
	 * @generated
	 */
	int DATATYPE = 16;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE__NAME = CLASS_DECL__NAME;

	/**
	 * The feature id for the '<em><b>Context</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE__CONTEXT = CLASS_DECL__CONTEXT;

	/**
	 * The feature id for the '<em><b>Body Elements</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE__BODY_ELEMENTS = CLASS_DECL__BODY_ELEMENTS;

	/**
	 * The feature id for the '<em><b>Constructors</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE__CONSTRUCTORS = CLASS_DECL_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Datatype</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE_FEATURE_COUNT = CLASS_DECL_FEATURE_COUNT + 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.IVariableProvider <em>IVariable Provider</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.IVariableProvider
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIVariableProvider()
	 * @generated
	 */
	int IVARIABLE_PROVIDER = 38;

	/**
	 * The number of structural features of the '<em>IVariable Provider</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IVARIABLE_PROVIDER_FEATURE_COUNT = 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.DatatypeConstructorImpl <em>Datatype Constructor</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.DatatypeConstructorImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getDatatypeConstructor()
	 * @generated
	 */
	int DATATYPE_CONSTRUCTOR = 17;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE_CONSTRUCTOR__NAME = IVARIABLE_PROVIDER_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Decons</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE_CONSTRUCTOR__DECONS = IVARIABLE_PROVIDER_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Datatype Constructor</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE_CONSTRUCTOR_FEATURE_COUNT = IVARIABLE_PROVIDER_FEATURE_COUNT + 2;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.ExtendImpl <em>Extend</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.ExtendImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getExtend()
	 * @generated
	 */
	int EXTEND = 18;

	/**
	 * The feature id for the '<em><b>Extended Class</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTEND__EXTENDED_CLASS = IVARIABLE_PROVIDER_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTEND__NAME = IVARIABLE_PROVIDER_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Body Elements</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTEND__BODY_ELEMENTS = IVARIABLE_PROVIDER_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Extend</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTEND_FEATURE_COUNT = IVARIABLE_PROVIDER_FEATURE_COUNT + 3;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypeBodyElementsImpl <em>Type Body Elements</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypeBodyElementsImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeBodyElements()
	 * @generated
	 */
	int TYPE_BODY_ELEMENTS = 19;

	/**
	 * The feature id for the '<em><b>Functions</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_BODY_ELEMENTS__FUNCTIONS = 0;

	/**
	 * The feature id for the '<em><b>Theorems</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_BODY_ELEMENTS__THEOREMS = 1;

	/**
	 * The number of structural features of the '<em>Type Body Elements</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_BODY_ELEMENTS_FEATURE_COUNT = 2;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.FunctionDeclImpl <em>Function Decl</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.FunctionDeclImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getFunctionDecl()
	 * @generated
	 */
	int FUNCTION_DECL = 20;

	/**
	 * The feature id for the '<em><b>Context</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL__CONTEXT = IVARIABLE_PROVIDER_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Var List</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL__VAR_LIST = IVARIABLE_PROVIDER_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL__RETURN_TYPE = IVARIABLE_PROVIDER_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Infix</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL__INFIX = IVARIABLE_PROVIDER_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Precedence</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL__PRECEDENCE = IVARIABLE_PROVIDER_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Expr</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL__EXPR = IVARIABLE_PROVIDER_FEATURE_COUNT + 5;

	/**
	 * The feature id for the '<em><b>Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL__NAME = IVARIABLE_PROVIDER_FEATURE_COUNT + 6;

	/**
	 * The number of structural features of the '<em>Function Decl</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL_FEATURE_COUNT = IVARIABLE_PROVIDER_FEATURE_COUNT + 7;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.ExpressionVariableImpl <em>Expression Variable</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.ExpressionVariableImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getExpressionVariable()
	 * @generated
	 */
	int EXPRESSION_VARIABLE = 35;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_VARIABLE__NAME = NAMED_OBJECT__NAME;

	/**
	 * The number of structural features of the '<em>Expression Variable</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_VARIABLE_FEATURE_COUNT = NAMED_OBJECT_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.FunctionNameImpl <em>Function Name</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.FunctionNameImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getFunctionName()
	 * @generated
	 */
	int FUNCTION_NAME = 21;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_NAME__NAME = EXPRESSION_VARIABLE__NAME;

	/**
	 * The number of structural features of the '<em>Function Name</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_NAME_FEATURE_COUNT = EXPRESSION_VARIABLE_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.ExpressionImpl <em>Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.ExpressionImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getExpression()
	 * @generated
	 */
	int EXPRESSION = 31;

	/**
	 * The feature id for the '<em><b>Type Inst</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION__TYPE_INST = 0;

	/**
	 * The number of structural features of the '<em>Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.MatchStatementImpl <em>Match Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.MatchStatementImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getMatchStatement()
	 * @generated
	 */
	int MATCH_STATEMENT = 22;

	/**
	 * The feature id for the '<em><b>Type Inst</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_STATEMENT__TYPE_INST = EXPRESSION__TYPE_INST;

	/**
	 * The feature id for the '<em><b>Match</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_STATEMENT__MATCH = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Induct Case</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_STATEMENT__INDUCT_CASE = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Match Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_STATEMENT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.MatchCaseImpl <em>Match Case</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.MatchCaseImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getMatchCase()
	 * @generated
	 */
	int MATCH_CASE = 23;

	/**
	 * The feature id for the '<em><b>Decon Name</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_CASE__DECON_NAME = IVARIABLE_PROVIDER_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Variables</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_CASE__VARIABLES = IVARIABLE_PROVIDER_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Expr</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_CASE__EXPR = IVARIABLE_PROVIDER_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Match Case</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_CASE_FEATURE_COUNT = IVARIABLE_PROVIDER_FEATURE_COUNT + 3;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TheoremBodyImpl <em>Theorem Body</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TheoremBodyImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTheoremBody()
	 * @generated
	 */
	int THEOREM_BODY = 24;

	/**
	 * The feature id for the '<em><b>Theorem Decl</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THEOREM_BODY__THEOREM_DECL = 0;

	/**
	 * The number of structural features of the '<em>Theorem Body</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THEOREM_BODY_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TheoremDeclImpl <em>Theorem Decl</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TheoremDeclImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTheoremDecl()
	 * @generated
	 */
	int THEOREM_DECL = 25;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THEOREM_DECL__NAME = 0;

	/**
	 * The feature id for the '<em><b>Expr</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THEOREM_DECL__EXPR = 1;

	/**
	 * The number of structural features of the '<em>Theorem Decl</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THEOREM_DECL_FEATURE_COUNT = 2;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypedVariableListImpl <em>Typed Variable List</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypedVariableListImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypedVariableList()
	 * @generated
	 */
	int TYPED_VARIABLE_LIST = 26;

	/**
	 * The feature id for the '<em><b>Variables Of Type</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_VARIABLE_LIST__VARIABLES_OF_TYPE = 0;

	/**
	 * The number of structural features of the '<em>Typed Variable List</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_VARIABLE_LIST_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.VariableTypingImpl <em>Variable Typing</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.VariableTypingImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getVariableTyping()
	 * @generated
	 */
	int VARIABLE_TYPING = 27;

	/**
	 * The feature id for the '<em><b>Type Var</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int VARIABLE_TYPING__TYPE_VAR = 0;

	/**
	 * The feature id for the '<em><b>Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int VARIABLE_TYPING__TYPE = 1;

	/**
	 * The number of structural features of the '<em>Variable Typing</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int VARIABLE_TYPING_FEATURE_COUNT = 2;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypedVariableImpl <em>Typed Variable</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypedVariableImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypedVariable()
	 * @generated
	 */
	int TYPED_VARIABLE = 28;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_VARIABLE__NAME = EXPRESSION_VARIABLE__NAME;

	/**
	 * The number of structural features of the '<em>Typed Variable</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_VARIABLE_FEATURE_COUNT = EXPRESSION_VARIABLE_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypeDeclarationImpl <em>Type Declaration</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypeDeclarationImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeDeclaration()
	 * @generated
	 */
	int TYPE_DECLARATION = 29;

	/**
	 * The feature id for the '<em><b>Context</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECLARATION__CONTEXT = 0;

	/**
	 * The feature id for the '<em><b>Type Name</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECLARATION__TYPE_NAME = 1;

	/**
	 * The number of structural features of the '<em>Type Declaration</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECLARATION_FEATURE_COUNT = 2;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.QuantLambdaImpl <em>Quant Lambda</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.QuantLambdaImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getQuantLambda()
	 * @generated
	 */
	int QUANT_LAMBDA = 30;

	/**
	 * The feature id for the '<em><b>Type Inst</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUANT_LAMBDA__TYPE_INST = EXPRESSION__TYPE_INST;

	/**
	 * The feature id for the '<em><b>QType</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUANT_LAMBDA__QTYPE = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Context</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUANT_LAMBDA__CONTEXT = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Var List</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUANT_LAMBDA__VAR_LIST = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Expr</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUANT_LAMBDA__EXPR = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>Quant Lambda</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUANT_LAMBDA_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 4;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.FunctionCallImpl <em>Function Call</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.FunctionCallImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getFunctionCall()
	 * @generated
	 */
	int FUNCTION_CALL = 32;

	/**
	 * The feature id for the '<em><b>Type Inst</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_CALL__TYPE_INST = EXPRESSION__TYPE_INST;

	/**
	 * The feature id for the '<em><b>Arguments</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_CALL__ARGUMENTS = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Function Call</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_CALL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.PrefixImpl <em>Prefix</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.PrefixImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPrefix()
	 * @generated
	 */
	int PREFIX = 33;

	/**
	 * The feature id for the '<em><b>Type Inst</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PREFIX__TYPE_INST = EXPRESSION__TYPE_INST;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PREFIX__NAME = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Elem</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PREFIX__ELEM = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Prefix</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PREFIX_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.BracketImpl <em>Bracket</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.BracketImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getBracket()
	 * @generated
	 */
	int BRACKET = 34;

	/**
	 * The feature id for the '<em><b>Type Inst</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BRACKET__TYPE_INST = EXPRESSION__TYPE_INST;

	/**
	 * The feature id for the '<em><b>Child</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BRACKET__CHILD = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Bracket</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BRACKET_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.InstanceImpl <em>Instance</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.InstanceImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getInstance()
	 * @generated
	 */
	int INSTANCE = 36;

	/**
	 * The feature id for the '<em><b>Class Name</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE__CLASS_NAME = 0;

	/**
	 * The feature id for the '<em><b>Context</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE__CONTEXT = 1;

	/**
	 * The feature id for the '<em><b>Arguments</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE__ARGUMENTS = 2;

	/**
	 * The number of structural features of the '<em>Instance</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_FEATURE_COUNT = 3;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.InfixImpl <em>Infix</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.InfixImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getInfix()
	 * @generated
	 */
	int INFIX = 37;

	/**
	 * The feature id for the '<em><b>Type Inst</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INFIX__TYPE_INST = EXPRESSION__TYPE_INST;

	/**
	 * The feature id for the '<em><b>Left</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INFIX__LEFT = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Func Name</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INFIX__FUNC_NAME = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Op Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INFIX__OP_NAME = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Right</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INFIX__RIGHT = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>Infix</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INFIX_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 4;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.IPolyTypeProvider <em>IPoly Type Provider</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.IPolyTypeProvider
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIPolyTypeProvider()
	 * @generated
	 */
	int IPOLY_TYPE_PROVIDER = 39;

	/**
	 * The number of structural features of the '<em>IPoly Type Provider</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IPOLY_TYPE_PROVIDER_FEATURE_COUNT = 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypeImpl <em>Type</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypeImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getType()
	 * @generated
	 */
	int TYPE = 40;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE__NAME = GEN_NAME__NAME;

	/**
	 * The number of structural features of the '<em>Type</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_FEATURE_COUNT = GEN_NAME_FEATURE_COUNT + 0;


	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.DomainModel <em>Domain Model</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Domain Model</em>'.
	 * @see ac.soton.bsharp.bSharp.DomainModel
	 * @generated
	 */
	EClass getDomainModel();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.DomainModel#getElements <em>Elements</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Elements</em>'.
	 * @see ac.soton.bsharp.bSharp.DomainModel#getElements()
	 * @see #getDomainModel()
	 * @generated
	 */
	EReference getDomainModel_Elements();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TopLevel <em>Top Level</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Top Level</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevel
	 * @generated
	 */
	EClass getTopLevel();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.TopLevel#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevel#getName()
	 * @see #getTopLevel()
	 * @generated
	 */
	EAttribute getTopLevel_Name();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TopLevel#getImports <em>Imports</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Imports</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevel#getImports()
	 * @see #getTopLevel()
	 * @generated
	 */
	EReference getTopLevel_Imports();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TopLevel#getClasses <em>Classes</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Classes</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevel#getClasses()
	 * @see #getTopLevel()
	 * @generated
	 */
	EReference getTopLevel_Classes();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TopLevel#getExtends <em>Extends</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Extends</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevel#getExtends()
	 * @see #getTopLevel()
	 * @generated
	 */
	EReference getTopLevel_Extends();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TopLevel#getInstances <em>Instances</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Instances</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevel#getInstances()
	 * @see #getTopLevel()
	 * @generated
	 */
	EReference getTopLevel_Instances();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.ImportStatement <em>Import Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Import Statement</em>'.
	 * @see ac.soton.bsharp.bSharp.ImportStatement
	 * @generated
	 */
	EClass getImportStatement();

	/**
	 * Returns the meta object for the attribute list '{@link ac.soton.bsharp.bSharp.ImportStatement#getImports <em>Imports</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute list '<em>Imports</em>'.
	 * @see ac.soton.bsharp.bSharp.ImportStatement#getImports()
	 * @see #getImportStatement()
	 * @generated
	 */
	EAttribute getImportStatement_Imports();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.ClassDecl <em>Class Decl</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Class Decl</em>'.
	 * @see ac.soton.bsharp.bSharp.ClassDecl
	 * @generated
	 */
	EClass getClassDecl();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.ClassDecl#getContext <em>Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Context</em>'.
	 * @see ac.soton.bsharp.bSharp.ClassDecl#getContext()
	 * @see #getClassDecl()
	 * @generated
	 */
	EReference getClassDecl_Context();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.ClassDecl#getBodyElements <em>Body Elements</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Body Elements</em>'.
	 * @see ac.soton.bsharp.bSharp.ClassDecl#getBodyElements()
	 * @see #getClassDecl()
	 * @generated
	 */
	EReference getClassDecl_BodyElements();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.BppClass <em>Bpp Class</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Bpp Class</em>'.
	 * @see ac.soton.bsharp.bSharp.BppClass
	 * @generated
	 */
	EClass getBppClass();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.BppClass#getSupertypes <em>Supertypes</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Supertypes</em>'.
	 * @see ac.soton.bsharp.bSharp.BppClass#getSupertypes()
	 * @see #getBppClass()
	 * @generated
	 */
	EReference getBppClass_Supertypes();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.BppClass#getVarList <em>Var List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Var List</em>'.
	 * @see ac.soton.bsharp.bSharp.BppClass#getVarList()
	 * @see #getBppClass()
	 * @generated
	 */
	EReference getBppClass_VarList();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.BppClass#getWhere <em>Where</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Where</em>'.
	 * @see ac.soton.bsharp.bSharp.BppClass#getWhere()
	 * @see #getBppClass()
	 * @generated
	 */
	EReference getBppClass_Where();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.GenName <em>Gen Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Gen Name</em>'.
	 * @see ac.soton.bsharp.bSharp.GenName
	 * @generated
	 */
	EClass getGenName();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.PolymorphicTypeName <em>Polymorphic Type Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Polymorphic Type Name</em>'.
	 * @see ac.soton.bsharp.bSharp.PolymorphicTypeName
	 * @generated
	 */
	EClass getPolymorphicTypeName();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.PolyContext <em>Poly Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Poly Context</em>'.
	 * @see ac.soton.bsharp.bSharp.PolyContext
	 * @generated
	 */
	EClass getPolyContext();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.PolyContext#getPolyTypes <em>Poly Types</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Poly Types</em>'.
	 * @see ac.soton.bsharp.bSharp.PolyContext#getPolyTypes()
	 * @see #getPolyContext()
	 * @generated
	 */
	EReference getPolyContext_PolyTypes();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.PolyContextTypes <em>Poly Context Types</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Poly Context Types</em>'.
	 * @see ac.soton.bsharp.bSharp.PolyContextTypes
	 * @generated
	 */
	EClass getPolyContextTypes();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.PolyContextTypes#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Name</em>'.
	 * @see ac.soton.bsharp.bSharp.PolyContextTypes#getName()
	 * @see #getPolyContextTypes()
	 * @generated
	 */
	EReference getPolyContextTypes_Name();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.PolyContextTypes#getConstraints <em>Constraints</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Constraints</em>'.
	 * @see ac.soton.bsharp.bSharp.PolyContextTypes#getConstraints()
	 * @see #getPolyContextTypes()
	 * @generated
	 */
	EReference getPolyContextTypes_Constraints();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.PolyTypeConstraints <em>Poly Type Constraints</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Poly Type Constraints</em>'.
	 * @see ac.soton.bsharp.bSharp.PolyTypeConstraints
	 * @generated
	 */
	EClass getPolyTypeConstraints();

	/**
	 * Returns the meta object for the reference list '{@link ac.soton.bsharp.bSharp.PolyTypeConstraints#getTypeName <em>Type Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Type Name</em>'.
	 * @see ac.soton.bsharp.bSharp.PolyTypeConstraints#getTypeName()
	 * @see #getPolyTypeConstraints()
	 * @generated
	 */
	EReference getPolyTypeConstraints_TypeName();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.SuperTypeList <em>Super Type List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Super Type List</em>'.
	 * @see ac.soton.bsharp.bSharp.SuperTypeList
	 * @generated
	 */
	EClass getSuperTypeList();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.SuperTypeList#getSuperType <em>Super Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Super Type</em>'.
	 * @see ac.soton.bsharp.bSharp.SuperTypeList#getSuperType()
	 * @see #getSuperTypeList()
	 * @generated
	 */
	EReference getSuperTypeList_SuperType();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.ConstructedType <em>Constructed Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Constructed Type</em>'.
	 * @see ac.soton.bsharp.bSharp.ConstructedType
	 * @generated
	 */
	EClass getConstructedType();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.ConstructedType#getType <em>Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Type</em>'.
	 * @see ac.soton.bsharp.bSharp.ConstructedType#getType()
	 * @see #getConstructedType()
	 * @generated
	 */
	EReference getConstructedType_Type();

	/**
	 * Returns the meta object for the attribute list '{@link ac.soton.bsharp.bSharp.ConstructedType#getConstructors <em>Constructors</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute list '<em>Constructors</em>'.
	 * @see ac.soton.bsharp.bSharp.ConstructedType#getConstructors()
	 * @see #getConstructedType()
	 * @generated
	 */
	EAttribute getConstructedType_Constructors();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TypeConstructor <em>Type Constructor</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type Constructor</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeConstructor
	 * @generated
	 */
	EClass getTypeConstructor();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.TypeConstructor#getTypeName <em>Type Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Type Name</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeConstructor#getTypeName()
	 * @see #getTypeConstructor()
	 * @generated
	 */
	EReference getTypeConstructor_TypeName();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TypeConstructor#getContext <em>Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Context</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeConstructor#getContext()
	 * @see #getTypeConstructor()
	 * @generated
	 */
	EReference getTypeConstructor_Context();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TypeDeclContext <em>Type Decl Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type Decl Context</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeDeclContext
	 * @generated
	 */
	EClass getTypeDeclContext();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TypeDeclContext#getTypeName <em>Type Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Type Name</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeDeclContext#getTypeName()
	 * @see #getTypeDeclContext()
	 * @generated
	 */
	EReference getTypeDeclContext_TypeName();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TypeStructure <em>Type Structure</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type Structure</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeStructure
	 * @generated
	 */
	EClass getTypeStructure();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.TypeStructure#getVariables <em>Variables</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Variables</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeStructure#getVariables()
	 * @see #getTypeStructure()
	 * @generated
	 */
	EReference getTypeStructure_Variables();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Where <em>Where</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Where</em>'.
	 * @see ac.soton.bsharp.bSharp.Where
	 * @generated
	 */
	EClass getWhere();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.Where#getExpessions <em>Expessions</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Expessions</em>'.
	 * @see ac.soton.bsharp.bSharp.Where#getExpessions()
	 * @see #getWhere()
	 * @generated
	 */
	EReference getWhere_Expessions();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.Where#getExpressions <em>Expressions</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Expressions</em>'.
	 * @see ac.soton.bsharp.bSharp.Where#getExpressions()
	 * @see #getWhere()
	 * @generated
	 */
	EReference getWhere_Expressions();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Datatype <em>Datatype</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Datatype</em>'.
	 * @see ac.soton.bsharp.bSharp.Datatype
	 * @generated
	 */
	EClass getDatatype();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.Datatype#getConstructors <em>Constructors</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Constructors</em>'.
	 * @see ac.soton.bsharp.bSharp.Datatype#getConstructors()
	 * @see #getDatatype()
	 * @generated
	 */
	EReference getDatatype_Constructors();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.DatatypeConstructor <em>Datatype Constructor</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Datatype Constructor</em>'.
	 * @see ac.soton.bsharp.bSharp.DatatypeConstructor
	 * @generated
	 */
	EClass getDatatypeConstructor();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.DatatypeConstructor#getDecons <em>Decons</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Decons</em>'.
	 * @see ac.soton.bsharp.bSharp.DatatypeConstructor#getDecons()
	 * @see #getDatatypeConstructor()
	 * @generated
	 */
	EReference getDatatypeConstructor_Decons();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Extend <em>Extend</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Extend</em>'.
	 * @see ac.soton.bsharp.bSharp.Extend
	 * @generated
	 */
	EClass getExtend();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.Extend#getExtendedClass <em>Extended Class</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Extended Class</em>'.
	 * @see ac.soton.bsharp.bSharp.Extend#getExtendedClass()
	 * @see #getExtend()
	 * @generated
	 */
	EReference getExtend_ExtendedClass();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.Extend#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see ac.soton.bsharp.bSharp.Extend#getName()
	 * @see #getExtend()
	 * @generated
	 */
	EAttribute getExtend_Name();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.Extend#getBodyElements <em>Body Elements</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Body Elements</em>'.
	 * @see ac.soton.bsharp.bSharp.Extend#getBodyElements()
	 * @see #getExtend()
	 * @generated
	 */
	EReference getExtend_BodyElements();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TypeBodyElements <em>Type Body Elements</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type Body Elements</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeBodyElements
	 * @generated
	 */
	EClass getTypeBodyElements();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TypeBodyElements#getFunctions <em>Functions</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Functions</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeBodyElements#getFunctions()
	 * @see #getTypeBodyElements()
	 * @generated
	 */
	EReference getTypeBodyElements_Functions();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TypeBodyElements#getTheorems <em>Theorems</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Theorems</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeBodyElements#getTheorems()
	 * @see #getTypeBodyElements()
	 * @generated
	 */
	EReference getTypeBodyElements_Theorems();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.FunctionDecl <em>Function Decl</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Function Decl</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionDecl
	 * @generated
	 */
	EClass getFunctionDecl();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.FunctionDecl#getContext <em>Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Context</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionDecl#getContext()
	 * @see #getFunctionDecl()
	 * @generated
	 */
	EReference getFunctionDecl_Context();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.FunctionDecl#getVarList <em>Var List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Var List</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionDecl#getVarList()
	 * @see #getFunctionDecl()
	 * @generated
	 */
	EReference getFunctionDecl_VarList();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.FunctionDecl#getReturnType <em>Return Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Return Type</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionDecl#getReturnType()
	 * @see #getFunctionDecl()
	 * @generated
	 */
	EReference getFunctionDecl_ReturnType();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.FunctionDecl#getInfix <em>Infix</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Infix</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionDecl#getInfix()
	 * @see #getFunctionDecl()
	 * @generated
	 */
	EAttribute getFunctionDecl_Infix();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.FunctionDecl#getPrecedence <em>Precedence</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Precedence</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionDecl#getPrecedence()
	 * @see #getFunctionDecl()
	 * @generated
	 */
	EAttribute getFunctionDecl_Precedence();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.FunctionDecl#getExpr <em>Expr</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expr</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionDecl#getExpr()
	 * @see #getFunctionDecl()
	 * @generated
	 */
	EReference getFunctionDecl_Expr();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.FunctionDecl#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Name</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionDecl#getName()
	 * @see #getFunctionDecl()
	 * @generated
	 */
	EReference getFunctionDecl_Name();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.FunctionName <em>Function Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Function Name</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionName
	 * @generated
	 */
	EClass getFunctionName();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.MatchStatement <em>Match Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Match Statement</em>'.
	 * @see ac.soton.bsharp.bSharp.MatchStatement
	 * @generated
	 */
	EClass getMatchStatement();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.MatchStatement#getMatch <em>Match</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Match</em>'.
	 * @see ac.soton.bsharp.bSharp.MatchStatement#getMatch()
	 * @see #getMatchStatement()
	 * @generated
	 */
	EReference getMatchStatement_Match();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.MatchStatement#getInductCase <em>Induct Case</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Induct Case</em>'.
	 * @see ac.soton.bsharp.bSharp.MatchStatement#getInductCase()
	 * @see #getMatchStatement()
	 * @generated
	 */
	EReference getMatchStatement_InductCase();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.MatchCase <em>Match Case</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Match Case</em>'.
	 * @see ac.soton.bsharp.bSharp.MatchCase
	 * @generated
	 */
	EClass getMatchCase();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.MatchCase#getDeconName <em>Decon Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Decon Name</em>'.
	 * @see ac.soton.bsharp.bSharp.MatchCase#getDeconName()
	 * @see #getMatchCase()
	 * @generated
	 */
	EReference getMatchCase_DeconName();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.MatchCase#getVariables <em>Variables</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Variables</em>'.
	 * @see ac.soton.bsharp.bSharp.MatchCase#getVariables()
	 * @see #getMatchCase()
	 * @generated
	 */
	EReference getMatchCase_Variables();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.MatchCase#getExpr <em>Expr</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expr</em>'.
	 * @see ac.soton.bsharp.bSharp.MatchCase#getExpr()
	 * @see #getMatchCase()
	 * @generated
	 */
	EReference getMatchCase_Expr();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TheoremBody <em>Theorem Body</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Theorem Body</em>'.
	 * @see ac.soton.bsharp.bSharp.TheoremBody
	 * @generated
	 */
	EClass getTheoremBody();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TheoremBody#getTheoremDecl <em>Theorem Decl</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Theorem Decl</em>'.
	 * @see ac.soton.bsharp.bSharp.TheoremBody#getTheoremDecl()
	 * @see #getTheoremBody()
	 * @generated
	 */
	EReference getTheoremBody_TheoremDecl();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TheoremDecl <em>Theorem Decl</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Theorem Decl</em>'.
	 * @see ac.soton.bsharp.bSharp.TheoremDecl
	 * @generated
	 */
	EClass getTheoremDecl();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.TheoremDecl#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see ac.soton.bsharp.bSharp.TheoremDecl#getName()
	 * @see #getTheoremDecl()
	 * @generated
	 */
	EAttribute getTheoremDecl_Name();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.TheoremDecl#getExpr <em>Expr</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expr</em>'.
	 * @see ac.soton.bsharp.bSharp.TheoremDecl#getExpr()
	 * @see #getTheoremDecl()
	 * @generated
	 */
	EReference getTheoremDecl_Expr();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TypedVariableList <em>Typed Variable List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Typed Variable List</em>'.
	 * @see ac.soton.bsharp.bSharp.TypedVariableList
	 * @generated
	 */
	EClass getTypedVariableList();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TypedVariableList#getVariablesOfType <em>Variables Of Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Variables Of Type</em>'.
	 * @see ac.soton.bsharp.bSharp.TypedVariableList#getVariablesOfType()
	 * @see #getTypedVariableList()
	 * @generated
	 */
	EReference getTypedVariableList_VariablesOfType();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.VariableTyping <em>Variable Typing</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Variable Typing</em>'.
	 * @see ac.soton.bsharp.bSharp.VariableTyping
	 * @generated
	 */
	EClass getVariableTyping();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.VariableTyping#getTypeVar <em>Type Var</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Type Var</em>'.
	 * @see ac.soton.bsharp.bSharp.VariableTyping#getTypeVar()
	 * @see #getVariableTyping()
	 * @generated
	 */
	EReference getVariableTyping_TypeVar();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.VariableTyping#getType <em>Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Type</em>'.
	 * @see ac.soton.bsharp.bSharp.VariableTyping#getType()
	 * @see #getVariableTyping()
	 * @generated
	 */
	EReference getVariableTyping_Type();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TypedVariable <em>Typed Variable</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Typed Variable</em>'.
	 * @see ac.soton.bsharp.bSharp.TypedVariable
	 * @generated
	 */
	EClass getTypedVariable();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TypeDeclaration <em>Type Declaration</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type Declaration</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeDeclaration
	 * @generated
	 */
	EClass getTypeDeclaration();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.TypeDeclaration#getContext <em>Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Context</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeDeclaration#getContext()
	 * @see #getTypeDeclaration()
	 * @generated
	 */
	EReference getTypeDeclaration_Context();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.TypeDeclaration#getTypeName <em>Type Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Type Name</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeDeclaration#getTypeName()
	 * @see #getTypeDeclaration()
	 * @generated
	 */
	EReference getTypeDeclaration_TypeName();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.QuantLambda <em>Quant Lambda</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Quant Lambda</em>'.
	 * @see ac.soton.bsharp.bSharp.QuantLambda
	 * @generated
	 */
	EClass getQuantLambda();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.QuantLambda#getQType <em>QType</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>QType</em>'.
	 * @see ac.soton.bsharp.bSharp.QuantLambda#getQType()
	 * @see #getQuantLambda()
	 * @generated
	 */
	EAttribute getQuantLambda_QType();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.QuantLambda#getContext <em>Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Context</em>'.
	 * @see ac.soton.bsharp.bSharp.QuantLambda#getContext()
	 * @see #getQuantLambda()
	 * @generated
	 */
	EReference getQuantLambda_Context();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.QuantLambda#getVarList <em>Var List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Var List</em>'.
	 * @see ac.soton.bsharp.bSharp.QuantLambda#getVarList()
	 * @see #getQuantLambda()
	 * @generated
	 */
	EReference getQuantLambda_VarList();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.QuantLambda#getExpr <em>Expr</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expr</em>'.
	 * @see ac.soton.bsharp.bSharp.QuantLambda#getExpr()
	 * @see #getQuantLambda()
	 * @generated
	 */
	EReference getQuantLambda_Expr();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Expression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Expression</em>'.
	 * @see ac.soton.bsharp.bSharp.Expression
	 * @generated
	 */
	EClass getExpression();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.Expression#getTypeInst <em>Type Inst</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Type Inst</em>'.
	 * @see ac.soton.bsharp.bSharp.Expression#getTypeInst()
	 * @see #getExpression()
	 * @generated
	 */
	EReference getExpression_TypeInst();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.FunctionCall <em>Function Call</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Function Call</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionCall
	 * @generated
	 */
	EClass getFunctionCall();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.FunctionCall#getArguments <em>Arguments</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Arguments</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionCall#getArguments()
	 * @see #getFunctionCall()
	 * @generated
	 */
	EReference getFunctionCall_Arguments();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Prefix <em>Prefix</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Prefix</em>'.
	 * @see ac.soton.bsharp.bSharp.Prefix
	 * @generated
	 */
	EClass getPrefix();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.Prefix#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see ac.soton.bsharp.bSharp.Prefix#getName()
	 * @see #getPrefix()
	 * @generated
	 */
	EAttribute getPrefix_Name();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.Prefix#getElem <em>Elem</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Elem</em>'.
	 * @see ac.soton.bsharp.bSharp.Prefix#getElem()
	 * @see #getPrefix()
	 * @generated
	 */
	EReference getPrefix_Elem();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Bracket <em>Bracket</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Bracket</em>'.
	 * @see ac.soton.bsharp.bSharp.Bracket
	 * @generated
	 */
	EClass getBracket();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.Bracket#getChild <em>Child</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Child</em>'.
	 * @see ac.soton.bsharp.bSharp.Bracket#getChild()
	 * @see #getBracket()
	 * @generated
	 */
	EReference getBracket_Child();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.ExpressionVariable <em>Expression Variable</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Expression Variable</em>'.
	 * @see ac.soton.bsharp.bSharp.ExpressionVariable
	 * @generated
	 */
	EClass getExpressionVariable();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Instance <em>Instance</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Instance</em>'.
	 * @see ac.soton.bsharp.bSharp.Instance
	 * @generated
	 */
	EClass getInstance();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.Instance#getClassName <em>Class Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Class Name</em>'.
	 * @see ac.soton.bsharp.bSharp.Instance#getClassName()
	 * @see #getInstance()
	 * @generated
	 */
	EReference getInstance_ClassName();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.Instance#getContext <em>Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Context</em>'.
	 * @see ac.soton.bsharp.bSharp.Instance#getContext()
	 * @see #getInstance()
	 * @generated
	 */
	EReference getInstance_Context();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.Instance#getArguments <em>Arguments</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Arguments</em>'.
	 * @see ac.soton.bsharp.bSharp.Instance#getArguments()
	 * @see #getInstance()
	 * @generated
	 */
	EReference getInstance_Arguments();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Infix <em>Infix</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Infix</em>'.
	 * @see ac.soton.bsharp.bSharp.Infix
	 * @generated
	 */
	EClass getInfix();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.Infix#getLeft <em>Left</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Left</em>'.
	 * @see ac.soton.bsharp.bSharp.Infix#getLeft()
	 * @see #getInfix()
	 * @generated
	 */
	EReference getInfix_Left();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.Infix#getFuncName <em>Func Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Func Name</em>'.
	 * @see ac.soton.bsharp.bSharp.Infix#getFuncName()
	 * @see #getInfix()
	 * @generated
	 */
	EReference getInfix_FuncName();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.Infix#getOpName <em>Op Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Op Name</em>'.
	 * @see ac.soton.bsharp.bSharp.Infix#getOpName()
	 * @see #getInfix()
	 * @generated
	 */
	EAttribute getInfix_OpName();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.Infix#getRight <em>Right</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Right</em>'.
	 * @see ac.soton.bsharp.bSharp.Infix#getRight()
	 * @see #getInfix()
	 * @generated
	 */
	EReference getInfix_Right();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.IVariableProvider <em>IVariable Provider</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>IVariable Provider</em>'.
	 * @see ac.soton.bsharp.bSharp.IVariableProvider
	 * @generated
	 */
	EClass getIVariableProvider();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.IPolyTypeProvider <em>IPoly Type Provider</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>IPoly Type Provider</em>'.
	 * @see ac.soton.bsharp.bSharp.IPolyTypeProvider
	 * @generated
	 */
	EClass getIPolyTypeProvider();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Type <em>Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type</em>'.
	 * @see ac.soton.bsharp.bSharp.Type
	 * @generated
	 */
	EClass getType();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.NamedObject <em>Named Object</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Named Object</em>'.
	 * @see ac.soton.bsharp.bSharp.NamedObject
	 * @generated
	 */
	EClass getNamedObject();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.NamedObject#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see ac.soton.bsharp.bSharp.NamedObject#getName()
	 * @see #getNamedObject()
	 * @generated
	 */
	EAttribute getNamedObject_Name();

	/**
	 * Returns the factory that creates the instances of the model.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the factory that creates the instances of the model.
	 * @generated
	 */
	BSharpFactory getBSharpFactory();

	/**
	 * <!-- begin-user-doc -->
	 * Defines literals for the meta objects that represent
	 * <ul>
	 *   <li>each class,</li>
	 *   <li>each feature of each class,</li>
	 *   <li>each enum,</li>
	 *   <li>and each data type</li>
	 * </ul>
	 * <!-- end-user-doc -->
	 * @generated
	 */
	interface Literals {
		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.DomainModelImpl <em>Domain Model</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.DomainModelImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getDomainModel()
		 * @generated
		 */
		EClass DOMAIN_MODEL = eINSTANCE.getDomainModel();

		/**
		 * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference DOMAIN_MODEL__ELEMENTS = eINSTANCE.getDomainModel_Elements();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TopLevelImpl <em>Top Level</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TopLevelImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTopLevel()
		 * @generated
		 */
		EClass TOP_LEVEL = eINSTANCE.getTopLevel();

		/**
		 * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute TOP_LEVEL__NAME = eINSTANCE.getTopLevel_Name();

		/**
		 * The meta object literal for the '<em><b>Imports</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP_LEVEL__IMPORTS = eINSTANCE.getTopLevel_Imports();

		/**
		 * The meta object literal for the '<em><b>Classes</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP_LEVEL__CLASSES = eINSTANCE.getTopLevel_Classes();

		/**
		 * The meta object literal for the '<em><b>Extends</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP_LEVEL__EXTENDS = eINSTANCE.getTopLevel_Extends();

		/**
		 * The meta object literal for the '<em><b>Instances</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP_LEVEL__INSTANCES = eINSTANCE.getTopLevel_Instances();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.ImportStatementImpl <em>Import Statement</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.ImportStatementImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getImportStatement()
		 * @generated
		 */
		EClass IMPORT_STATEMENT = eINSTANCE.getImportStatement();

		/**
		 * The meta object literal for the '<em><b>Imports</b></em>' attribute list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute IMPORT_STATEMENT__IMPORTS = eINSTANCE.getImportStatement_Imports();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.ClassDeclImpl <em>Class Decl</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.ClassDeclImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getClassDecl()
		 * @generated
		 */
		EClass CLASS_DECL = eINSTANCE.getClassDecl();

		/**
		 * The meta object literal for the '<em><b>Context</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference CLASS_DECL__CONTEXT = eINSTANCE.getClassDecl_Context();

		/**
		 * The meta object literal for the '<em><b>Body Elements</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference CLASS_DECL__BODY_ELEMENTS = eINSTANCE.getClassDecl_BodyElements();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.BppClassImpl <em>Bpp Class</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.BppClassImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getBppClass()
		 * @generated
		 */
		EClass BPP_CLASS = eINSTANCE.getBppClass();

		/**
		 * The meta object literal for the '<em><b>Supertypes</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference BPP_CLASS__SUPERTYPES = eINSTANCE.getBppClass_Supertypes();

		/**
		 * The meta object literal for the '<em><b>Var List</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference BPP_CLASS__VAR_LIST = eINSTANCE.getBppClass_VarList();

		/**
		 * The meta object literal for the '<em><b>Where</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference BPP_CLASS__WHERE = eINSTANCE.getBppClass_Where();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.GenNameImpl <em>Gen Name</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.GenNameImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getGenName()
		 * @generated
		 */
		EClass GEN_NAME = eINSTANCE.getGenName();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.PolymorphicTypeNameImpl <em>Polymorphic Type Name</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.PolymorphicTypeNameImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPolymorphicTypeName()
		 * @generated
		 */
		EClass POLYMORPHIC_TYPE_NAME = eINSTANCE.getPolymorphicTypeName();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.PolyContextImpl <em>Poly Context</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.PolyContextImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPolyContext()
		 * @generated
		 */
		EClass POLY_CONTEXT = eINSTANCE.getPolyContext();

		/**
		 * The meta object literal for the '<em><b>Poly Types</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference POLY_CONTEXT__POLY_TYPES = eINSTANCE.getPolyContext_PolyTypes();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.PolyContextTypesImpl <em>Poly Context Types</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.PolyContextTypesImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPolyContextTypes()
		 * @generated
		 */
		EClass POLY_CONTEXT_TYPES = eINSTANCE.getPolyContextTypes();

		/**
		 * The meta object literal for the '<em><b>Name</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference POLY_CONTEXT_TYPES__NAME = eINSTANCE.getPolyContextTypes_Name();

		/**
		 * The meta object literal for the '<em><b>Constraints</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference POLY_CONTEXT_TYPES__CONSTRAINTS = eINSTANCE.getPolyContextTypes_Constraints();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.PolyTypeConstraintsImpl <em>Poly Type Constraints</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.PolyTypeConstraintsImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPolyTypeConstraints()
		 * @generated
		 */
		EClass POLY_TYPE_CONSTRAINTS = eINSTANCE.getPolyTypeConstraints();

		/**
		 * The meta object literal for the '<em><b>Type Name</b></em>' reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference POLY_TYPE_CONSTRAINTS__TYPE_NAME = eINSTANCE.getPolyTypeConstraints_TypeName();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.SuperTypeListImpl <em>Super Type List</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.SuperTypeListImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getSuperTypeList()
		 * @generated
		 */
		EClass SUPER_TYPE_LIST = eINSTANCE.getSuperTypeList();

		/**
		 * The meta object literal for the '<em><b>Super Type</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference SUPER_TYPE_LIST__SUPER_TYPE = eINSTANCE.getSuperTypeList_SuperType();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.ConstructedTypeImpl <em>Constructed Type</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.ConstructedTypeImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getConstructedType()
		 * @generated
		 */
		EClass CONSTRUCTED_TYPE = eINSTANCE.getConstructedType();

		/**
		 * The meta object literal for the '<em><b>Type</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference CONSTRUCTED_TYPE__TYPE = eINSTANCE.getConstructedType_Type();

		/**
		 * The meta object literal for the '<em><b>Constructors</b></em>' attribute list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute CONSTRUCTED_TYPE__CONSTRUCTORS = eINSTANCE.getConstructedType_Constructors();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypeConstructorImpl <em>Type Constructor</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypeConstructorImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeConstructor()
		 * @generated
		 */
		EClass TYPE_CONSTRUCTOR = eINSTANCE.getTypeConstructor();

		/**
		 * The meta object literal for the '<em><b>Type Name</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_CONSTRUCTOR__TYPE_NAME = eINSTANCE.getTypeConstructor_TypeName();

		/**
		 * The meta object literal for the '<em><b>Context</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_CONSTRUCTOR__CONTEXT = eINSTANCE.getTypeConstructor_Context();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypeDeclContextImpl <em>Type Decl Context</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypeDeclContextImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeDeclContext()
		 * @generated
		 */
		EClass TYPE_DECL_CONTEXT = eINSTANCE.getTypeDeclContext();

		/**
		 * The meta object literal for the '<em><b>Type Name</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_DECL_CONTEXT__TYPE_NAME = eINSTANCE.getTypeDeclContext_TypeName();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypeStructureImpl <em>Type Structure</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypeStructureImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeStructure()
		 * @generated
		 */
		EClass TYPE_STRUCTURE = eINSTANCE.getTypeStructure();

		/**
		 * The meta object literal for the '<em><b>Variables</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_STRUCTURE__VARIABLES = eINSTANCE.getTypeStructure_Variables();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.WhereImpl <em>Where</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.WhereImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getWhere()
		 * @generated
		 */
		EClass WHERE = eINSTANCE.getWhere();

		/**
		 * The meta object literal for the '<em><b>Expessions</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference WHERE__EXPESSIONS = eINSTANCE.getWhere_Expessions();

		/**
		 * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference WHERE__EXPRESSIONS = eINSTANCE.getWhere_Expressions();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.DatatypeImpl <em>Datatype</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.DatatypeImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getDatatype()
		 * @generated
		 */
		EClass DATATYPE = eINSTANCE.getDatatype();

		/**
		 * The meta object literal for the '<em><b>Constructors</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference DATATYPE__CONSTRUCTORS = eINSTANCE.getDatatype_Constructors();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.DatatypeConstructorImpl <em>Datatype Constructor</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.DatatypeConstructorImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getDatatypeConstructor()
		 * @generated
		 */
		EClass DATATYPE_CONSTRUCTOR = eINSTANCE.getDatatypeConstructor();

		/**
		 * The meta object literal for the '<em><b>Decons</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference DATATYPE_CONSTRUCTOR__DECONS = eINSTANCE.getDatatypeConstructor_Decons();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.ExtendImpl <em>Extend</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.ExtendImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getExtend()
		 * @generated
		 */
		EClass EXTEND = eINSTANCE.getExtend();

		/**
		 * The meta object literal for the '<em><b>Extended Class</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference EXTEND__EXTENDED_CLASS = eINSTANCE.getExtend_ExtendedClass();

		/**
		 * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute EXTEND__NAME = eINSTANCE.getExtend_Name();

		/**
		 * The meta object literal for the '<em><b>Body Elements</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference EXTEND__BODY_ELEMENTS = eINSTANCE.getExtend_BodyElements();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypeBodyElementsImpl <em>Type Body Elements</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypeBodyElementsImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeBodyElements()
		 * @generated
		 */
		EClass TYPE_BODY_ELEMENTS = eINSTANCE.getTypeBodyElements();

		/**
		 * The meta object literal for the '<em><b>Functions</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_BODY_ELEMENTS__FUNCTIONS = eINSTANCE.getTypeBodyElements_Functions();

		/**
		 * The meta object literal for the '<em><b>Theorems</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_BODY_ELEMENTS__THEOREMS = eINSTANCE.getTypeBodyElements_Theorems();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.FunctionDeclImpl <em>Function Decl</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.FunctionDeclImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getFunctionDecl()
		 * @generated
		 */
		EClass FUNCTION_DECL = eINSTANCE.getFunctionDecl();

		/**
		 * The meta object literal for the '<em><b>Context</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_DECL__CONTEXT = eINSTANCE.getFunctionDecl_Context();

		/**
		 * The meta object literal for the '<em><b>Var List</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_DECL__VAR_LIST = eINSTANCE.getFunctionDecl_VarList();

		/**
		 * The meta object literal for the '<em><b>Return Type</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_DECL__RETURN_TYPE = eINSTANCE.getFunctionDecl_ReturnType();

		/**
		 * The meta object literal for the '<em><b>Infix</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute FUNCTION_DECL__INFIX = eINSTANCE.getFunctionDecl_Infix();

		/**
		 * The meta object literal for the '<em><b>Precedence</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute FUNCTION_DECL__PRECEDENCE = eINSTANCE.getFunctionDecl_Precedence();

		/**
		 * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_DECL__EXPR = eINSTANCE.getFunctionDecl_Expr();

		/**
		 * The meta object literal for the '<em><b>Name</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_DECL__NAME = eINSTANCE.getFunctionDecl_Name();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.FunctionNameImpl <em>Function Name</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.FunctionNameImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getFunctionName()
		 * @generated
		 */
		EClass FUNCTION_NAME = eINSTANCE.getFunctionName();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.MatchStatementImpl <em>Match Statement</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.MatchStatementImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getMatchStatement()
		 * @generated
		 */
		EClass MATCH_STATEMENT = eINSTANCE.getMatchStatement();

		/**
		 * The meta object literal for the '<em><b>Match</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference MATCH_STATEMENT__MATCH = eINSTANCE.getMatchStatement_Match();

		/**
		 * The meta object literal for the '<em><b>Induct Case</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference MATCH_STATEMENT__INDUCT_CASE = eINSTANCE.getMatchStatement_InductCase();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.MatchCaseImpl <em>Match Case</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.MatchCaseImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getMatchCase()
		 * @generated
		 */
		EClass MATCH_CASE = eINSTANCE.getMatchCase();

		/**
		 * The meta object literal for the '<em><b>Decon Name</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference MATCH_CASE__DECON_NAME = eINSTANCE.getMatchCase_DeconName();

		/**
		 * The meta object literal for the '<em><b>Variables</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference MATCH_CASE__VARIABLES = eINSTANCE.getMatchCase_Variables();

		/**
		 * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference MATCH_CASE__EXPR = eINSTANCE.getMatchCase_Expr();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TheoremBodyImpl <em>Theorem Body</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TheoremBodyImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTheoremBody()
		 * @generated
		 */
		EClass THEOREM_BODY = eINSTANCE.getTheoremBody();

		/**
		 * The meta object literal for the '<em><b>Theorem Decl</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference THEOREM_BODY__THEOREM_DECL = eINSTANCE.getTheoremBody_TheoremDecl();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TheoremDeclImpl <em>Theorem Decl</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TheoremDeclImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTheoremDecl()
		 * @generated
		 */
		EClass THEOREM_DECL = eINSTANCE.getTheoremDecl();

		/**
		 * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute THEOREM_DECL__NAME = eINSTANCE.getTheoremDecl_Name();

		/**
		 * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference THEOREM_DECL__EXPR = eINSTANCE.getTheoremDecl_Expr();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypedVariableListImpl <em>Typed Variable List</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypedVariableListImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypedVariableList()
		 * @generated
		 */
		EClass TYPED_VARIABLE_LIST = eINSTANCE.getTypedVariableList();

		/**
		 * The meta object literal for the '<em><b>Variables Of Type</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPED_VARIABLE_LIST__VARIABLES_OF_TYPE = eINSTANCE.getTypedVariableList_VariablesOfType();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.VariableTypingImpl <em>Variable Typing</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.VariableTypingImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getVariableTyping()
		 * @generated
		 */
		EClass VARIABLE_TYPING = eINSTANCE.getVariableTyping();

		/**
		 * The meta object literal for the '<em><b>Type Var</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference VARIABLE_TYPING__TYPE_VAR = eINSTANCE.getVariableTyping_TypeVar();

		/**
		 * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference VARIABLE_TYPING__TYPE = eINSTANCE.getVariableTyping_Type();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypedVariableImpl <em>Typed Variable</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypedVariableImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypedVariable()
		 * @generated
		 */
		EClass TYPED_VARIABLE = eINSTANCE.getTypedVariable();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypeDeclarationImpl <em>Type Declaration</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypeDeclarationImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeDeclaration()
		 * @generated
		 */
		EClass TYPE_DECLARATION = eINSTANCE.getTypeDeclaration();

		/**
		 * The meta object literal for the '<em><b>Context</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_DECLARATION__CONTEXT = eINSTANCE.getTypeDeclaration_Context();

		/**
		 * The meta object literal for the '<em><b>Type Name</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_DECLARATION__TYPE_NAME = eINSTANCE.getTypeDeclaration_TypeName();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.QuantLambdaImpl <em>Quant Lambda</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.QuantLambdaImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getQuantLambda()
		 * @generated
		 */
		EClass QUANT_LAMBDA = eINSTANCE.getQuantLambda();

		/**
		 * The meta object literal for the '<em><b>QType</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute QUANT_LAMBDA__QTYPE = eINSTANCE.getQuantLambda_QType();

		/**
		 * The meta object literal for the '<em><b>Context</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference QUANT_LAMBDA__CONTEXT = eINSTANCE.getQuantLambda_Context();

		/**
		 * The meta object literal for the '<em><b>Var List</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference QUANT_LAMBDA__VAR_LIST = eINSTANCE.getQuantLambda_VarList();

		/**
		 * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference QUANT_LAMBDA__EXPR = eINSTANCE.getQuantLambda_Expr();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.ExpressionImpl <em>Expression</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.ExpressionImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getExpression()
		 * @generated
		 */
		EClass EXPRESSION = eINSTANCE.getExpression();

		/**
		 * The meta object literal for the '<em><b>Type Inst</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference EXPRESSION__TYPE_INST = eINSTANCE.getExpression_TypeInst();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.FunctionCallImpl <em>Function Call</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.FunctionCallImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getFunctionCall()
		 * @generated
		 */
		EClass FUNCTION_CALL = eINSTANCE.getFunctionCall();

		/**
		 * The meta object literal for the '<em><b>Arguments</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_CALL__ARGUMENTS = eINSTANCE.getFunctionCall_Arguments();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.PrefixImpl <em>Prefix</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.PrefixImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPrefix()
		 * @generated
		 */
		EClass PREFIX = eINSTANCE.getPrefix();

		/**
		 * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute PREFIX__NAME = eINSTANCE.getPrefix_Name();

		/**
		 * The meta object literal for the '<em><b>Elem</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference PREFIX__ELEM = eINSTANCE.getPrefix_Elem();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.BracketImpl <em>Bracket</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.BracketImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getBracket()
		 * @generated
		 */
		EClass BRACKET = eINSTANCE.getBracket();

		/**
		 * The meta object literal for the '<em><b>Child</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference BRACKET__CHILD = eINSTANCE.getBracket_Child();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.ExpressionVariableImpl <em>Expression Variable</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.ExpressionVariableImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getExpressionVariable()
		 * @generated
		 */
		EClass EXPRESSION_VARIABLE = eINSTANCE.getExpressionVariable();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.InstanceImpl <em>Instance</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.InstanceImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getInstance()
		 * @generated
		 */
		EClass INSTANCE = eINSTANCE.getInstance();

		/**
		 * The meta object literal for the '<em><b>Class Name</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference INSTANCE__CLASS_NAME = eINSTANCE.getInstance_ClassName();

		/**
		 * The meta object literal for the '<em><b>Context</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference INSTANCE__CONTEXT = eINSTANCE.getInstance_Context();

		/**
		 * The meta object literal for the '<em><b>Arguments</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference INSTANCE__ARGUMENTS = eINSTANCE.getInstance_Arguments();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.InfixImpl <em>Infix</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.InfixImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getInfix()
		 * @generated
		 */
		EClass INFIX = eINSTANCE.getInfix();

		/**
		 * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference INFIX__LEFT = eINSTANCE.getInfix_Left();

		/**
		 * The meta object literal for the '<em><b>Func Name</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference INFIX__FUNC_NAME = eINSTANCE.getInfix_FuncName();

		/**
		 * The meta object literal for the '<em><b>Op Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute INFIX__OP_NAME = eINSTANCE.getInfix_OpName();

		/**
		 * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference INFIX__RIGHT = eINSTANCE.getInfix_Right();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.IVariableProvider <em>IVariable Provider</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.IVariableProvider
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIVariableProvider()
		 * @generated
		 */
		EClass IVARIABLE_PROVIDER = eINSTANCE.getIVariableProvider();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.IPolyTypeProvider <em>IPoly Type Provider</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.IPolyTypeProvider
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIPolyTypeProvider()
		 * @generated
		 */
		EClass IPOLY_TYPE_PROVIDER = eINSTANCE.getIPolyTypeProvider();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypeImpl <em>Type</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypeImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getType()
		 * @generated
		 */
		EClass TYPE = eINSTANCE.getType();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.NamedObjectImpl <em>Named Object</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.NamedObjectImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getNamedObject()
		 * @generated
		 */
		EClass NAMED_OBJECT = eINSTANCE.getNamedObject();

		/**
		 * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute NAMED_OBJECT__NAME = eINSTANCE.getNamedObject_Name();

	}

} //BSharpPackage
