/**
 * generated by Xtext 2.14.0
 */
package ac.soton.bsharp.bSharp;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see ac.soton.bsharp.bSharp.BSharpFactory
 * @model kind="package"
 * @generated
 */
public interface BSharpPackage extends EPackage {
	/**
	 * The package name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNAME = "bSharp";

	/**
	 * The package namespace URI.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_URI = "http://www.soton.ac/bsharp/BSharp";

	/**
	 * The package namespace name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_PREFIX = "bSharp";

	/**
	 * The singleton instance of the package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	BSharpPackage eINSTANCE = ac.soton.bsharp.bSharp.impl.BSharpPackageImpl.init();

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.IEventBPrefixProvider <em>IEvent BPrefix Provider</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.IEventBPrefixProvider
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIEventBPrefixProvider()
	 * @generated
	 */
	int IEVENT_BPREFIX_PROVIDER = 0;

	/**
	 * The number of structural features of the '<em>IEvent BPrefix Provider</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IEVENT_BPREFIX_PROVIDER_FEATURE_COUNT = 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TopLevelImpl <em>Top Level</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TopLevelImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTopLevel()
	 * @generated
	 */
	int TOP_LEVEL = 44;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.ClassDeclImpl <em>Class Decl</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.ClassDeclImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getClassDecl()
	 * @generated
	 */
	int CLASS_DECL = 14;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.NamedObjectImpl <em>Named Object</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.NamedObjectImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getNamedObject()
	 * @generated
	 */
	int NAMED_OBJECT = 35;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.GenNameImpl <em>Gen Name</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.GenNameImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getGenName()
	 * @generated
	 */
	int GEN_NAME = 25;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.BSharpBlockImpl <em>Block</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.BSharpBlockImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getBSharpBlock()
	 * @generated
	 */
	int BSHARP_BLOCK = 13;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.PolyContextImpl <em>Poly Context</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.PolyContextImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPolyContext()
	 * @generated
	 */
	int POLY_CONTEXT = 36;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.SuperTypeListImpl <em>Super Type List</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.SuperTypeListImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getSuperTypeList()
	 * @generated
	 */
	int SUPER_TYPE_LIST = 40;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.ConstructedTypeImpl <em>Constructed Type</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.ConstructedTypeImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getConstructedType()
	 * @generated
	 */
	int CONSTRUCTED_TYPE = 16;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypeConstructorImpl <em>Type Constructor</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypeConstructorImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeConstructor()
	 * @generated
	 */
	int TYPE_CONSTRUCTOR = 47;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypeDeclContextImpl <em>Type Decl Context</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypeDeclContextImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeDeclContext()
	 * @generated
	 */
	int TYPE_DECL_CONTEXT = 49;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.WhereImpl <em>Where</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.WhereImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getWhere()
	 * @generated
	 */
	int WHERE = 54;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.DatatypeImpl <em>Datatype</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.DatatypeImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getDatatype()
	 * @generated
	 */
	int DATATYPE = 17;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.IVariableProvider <em>IVariable Provider</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.IVariableProvider
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIVariableProvider()
	 * @generated
	 */
	int IVARIABLE_PROVIDER = 1;

	/**
	 * The number of structural features of the '<em>IVariable Provider</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IVARIABLE_PROVIDER_FEATURE_COUNT = 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.DatatypeConstructorImpl <em>Datatype Constructor</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.DatatypeConstructorImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getDatatypeConstructor()
	 * @generated
	 */
	int DATATYPE_CONSTRUCTOR = 18;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.ExtendImpl <em>Extend</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.ExtendImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getExtend()
	 * @generated
	 */
	int EXTEND = 19;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.FunctionDeclImpl <em>Function Decl</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.FunctionDeclImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getFunctionDecl()
	 * @generated
	 */
	int FUNCTION_DECL = 24;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.ExpressionVariableImpl <em>Expression Variable</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.ExpressionVariableImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getExpressionVariable()
	 * @generated
	 */
	int EXPRESSION_VARIABLE = 21;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.ExpressionImpl <em>Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.ExpressionImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getExpression()
	 * @generated
	 */
	int EXPRESSION = 20;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.MatchStatementImpl <em>Match Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.MatchStatementImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getMatchStatement()
	 * @generated
	 */
	int MATCH_STATEMENT = 34;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.MatchCaseImpl <em>Match Case</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.MatchCaseImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getMatchCase()
	 * @generated
	 */
	int MATCH_CASE = 33;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TheoremBodyImpl <em>Theorem Body</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TheoremBodyImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTheoremBody()
	 * @generated
	 */
	int THEOREM_BODY = 41;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TheoremDeclImpl <em>Theorem Decl</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TheoremDeclImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTheoremDecl()
	 * @generated
	 */
	int THEOREM_DECL = 42;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypedVariableListImpl <em>Typed Variable List</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypedVariableListImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypedVariableList()
	 * @generated
	 */
	int TYPED_VARIABLE_LIST = 52;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.VariableTypingImpl <em>Variable Typing</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.VariableTypingImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getVariableTyping()
	 * @generated
	 */
	int VARIABLE_TYPING = 53;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypedVariableImpl <em>Typed Variable</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypedVariableImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypedVariable()
	 * @generated
	 */
	int TYPED_VARIABLE = 51;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.QuantLambdaImpl <em>Quant Lambda</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.QuantLambdaImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getQuantLambda()
	 * @generated
	 */
	int QUANT_LAMBDA = 39;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.FunctionCallImpl <em>Function Call</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.FunctionCallImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getFunctionCall()
	 * @generated
	 */
	int FUNCTION_CALL = 23;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.PrefixImpl <em>Prefix</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.PrefixImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPrefix()
	 * @generated
	 */
	int PREFIX = 38;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.BracketImpl <em>Bracket</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.BracketImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getBracket()
	 * @generated
	 */
	int BRACKET = 11;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.InstanceImpl <em>Instance</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.InstanceImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getInstance()
	 * @generated
	 */
	int INSTANCE = 31;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.InfixImpl <em>Infix</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.InfixImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getInfix()
	 * @generated
	 */
	int INFIX = 28;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.IPolyTypeProvider <em>IPoly Type Provider</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.IPolyTypeProvider
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIPolyTypeProvider()
	 * @generated
	 */
	int IPOLY_TYPE_PROVIDER = 2;

	/**
	 * The number of structural features of the '<em>IPoly Type Provider</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IPOLY_TYPE_PROVIDER_FEATURE_COUNT = 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.IClassInstance <em>IClass Instance</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.IClassInstance
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIClassInstance()
	 * @generated
	 */
	int ICLASS_INSTANCE = 3;

	/**
	 * The number of structural features of the '<em>IClass Instance</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ICLASS_INSTANCE_FEATURE_COUNT = 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.IExpressionContainerImpl <em>IExpression Container</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.IExpressionContainerImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIExpressionContainer()
	 * @generated
	 */
	int IEXPRESSION_CONTAINER = 4;

	/**
	 * The number of structural features of the '<em>IExpression Container</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IEXPRESSION_CONTAINER_FEATURE_COUNT = 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.ITheoryImportCacheProviderImpl <em>ITheory Import Cache Provider</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.ITheoryImportCacheProviderImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getITheoryImportCacheProvider()
	 * @generated
	 */
	int ITHEORY_IMPORT_CACHE_PROVIDER = 5;

	/**
	 * The number of structural features of the '<em>ITheory Import Cache Provider</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ITHEORY_IMPORT_CACHE_PROVIDER_FEATURE_COUNT = 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.ITheoremContainer <em>ITheorem Container</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.ITheoremContainer
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getITheoremContainer()
	 * @generated
	 */
	int ITHEOREM_CONTAINER = 6;

	/**
	 * The number of structural features of the '<em>ITheorem Container</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ITHEOREM_CONTAINER_FEATURE_COUNT = 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.IBodyElementsContainer <em>IBody Elements Container</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.IBodyElementsContainer
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIBodyElementsContainer()
	 * @generated
	 */
	int IBODY_ELEMENTS_CONTAINER = 7;

	/**
	 * The number of structural features of the '<em>IBody Elements Container</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IBODY_ELEMENTS_CONTAINER_FEATURE_COUNT = 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.IVarType <em>IVar Type</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.IVarType
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIVarType()
	 * @generated
	 */
	int IVAR_TYPE = 8;

	/**
	 * The number of structural features of the '<em>IVar Type</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IVAR_TYPE_FEATURE_COUNT = 0;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_OBJECT__NAME = 0;

	/**
	 * The number of structural features of the '<em>Named Object</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_OBJECT_FEATURE_COUNT = 1;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int GEN_NAME__NAME = NAMED_OBJECT__NAME;

	/**
	 * The number of structural features of the '<em>Gen Name</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int GEN_NAME_FEATURE_COUNT = NAMED_OBJECT_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypeImpl <em>Type</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypeImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getType()
	 * @generated
	 */
	int TYPE = 9;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE__NAME = GEN_NAME__NAME;

	/**
	 * The number of structural features of the '<em>Type</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_FEATURE_COUNT = GEN_NAME_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TopLevelInstanceImpl <em>Top Level Instance</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TopLevelInstanceImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTopLevelInstance()
	 * @generated
	 */
	int TOP_LEVEL_INSTANCE = 10;

	/**
	 * The feature id for the '<em><b>Block</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL_INSTANCE__BLOCK = 0;

	/**
	 * The number of structural features of the '<em>Top Level Instance</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL_INSTANCE_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TopLevelFileImpl <em>Top Level File</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TopLevelFileImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTopLevelFile()
	 * @generated
	 */
	int TOP_LEVEL_FILE = 43;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TopLevelImportImpl <em>Top Level Import</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TopLevelImportImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTopLevelImport()
	 * @generated
	 */
	int TOP_LEVEL_IMPORT = 45;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.PolyTypeImpl <em>Poly Type</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.PolyTypeImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPolyType()
	 * @generated
	 */
	int POLY_TYPE = 37;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.ClassVarDeclImpl <em>Class Var Decl</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.ClassVarDeclImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getClassVarDecl()
	 * @generated
	 */
	int CLASS_VAR_DECL = 15;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.GlobalImportImpl <em>Global Import</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.GlobalImportImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getGlobalImport()
	 * @generated
	 */
	int GLOBAL_IMPORT = 26;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.FileImportImpl <em>File Import</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.FileImportImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getFileImport()
	 * @generated
	 */
	int FILE_IMPORT = 22;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.LocalImportImpl <em>Local Import</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.LocalImportImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getLocalImport()
	 * @generated
	 */
	int LOCAL_IMPORT = 32;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.BSClassImpl <em>BS Class</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.BSClassImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getBSClass()
	 * @generated
	 */
	int BS_CLASS = 12;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypeBuilderImpl <em>Type Builder</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypeBuilderImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeBuilder()
	 * @generated
	 */
	int TYPE_BUILDER = 46;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypeConstrBracketImpl <em>Type Constr Bracket</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypeConstrBracketImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeConstrBracket()
	 * @generated
	 */
	int TYPE_CONSTR_BRACKET = 48;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.InstNameImpl <em>Inst Name</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.InstNameImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getInstName()
	 * @generated
	 */
	int INST_NAME = 30;

	/**
	 * The feature id for the '<em><b>Type Inst</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION__TYPE_INST = 0;

	/**
	 * The number of structural features of the '<em>Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_FEATURE_COUNT = 1;

	/**
	 * The feature id for the '<em><b>Type Inst</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BRACKET__TYPE_INST = EXPRESSION__TYPE_INST;

	/**
	 * The feature id for the '<em><b>Child</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BRACKET__CHILD = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Bracket</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BRACKET_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DECL__NAME = GEN_NAME__NAME;

	/**
	 * The feature id for the '<em><b>Block</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DECL__BLOCK = GEN_NAME_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Context</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DECL__CONTEXT = GEN_NAME_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Class Decl</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DECL_FEATURE_COUNT = GEN_NAME_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BS_CLASS__NAME = CLASS_DECL__NAME;

	/**
	 * The feature id for the '<em><b>Block</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BS_CLASS__BLOCK = CLASS_DECL__BLOCK;

	/**
	 * The feature id for the '<em><b>Context</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BS_CLASS__CONTEXT = CLASS_DECL__CONTEXT;

	/**
	 * The feature id for the '<em><b>Supertypes</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BS_CLASS__SUPERTYPES = CLASS_DECL_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Var List</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BS_CLASS__VAR_LIST = CLASS_DECL_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Where</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BS_CLASS__WHERE = CLASS_DECL_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Inst Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BS_CLASS__INST_NAME = CLASS_DECL_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>BS Class</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BS_CLASS_FEATURE_COUNT = CLASS_DECL_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Functions</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BSHARP_BLOCK__FUNCTIONS = 0;

	/**
	 * The feature id for the '<em><b>Theorems</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BSHARP_BLOCK__THEOREMS = 1;

	/**
	 * The number of structural features of the '<em>Block</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BSHARP_BLOCK_FEATURE_COUNT = 2;

	/**
	 * The feature id for the '<em><b>Owner Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_VAR_DECL__OWNER_TYPE = IVAR_TYPE_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Type Inst</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_VAR_DECL__TYPE_INST = IVAR_TYPE_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Class Var Decl</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_VAR_DECL_FEATURE_COUNT = IVAR_TYPE_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Type Builder</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_BUILDER_FEATURE_COUNT = 0;

	/**
	 * The feature id for the '<em><b>Constructor</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONSTRUCTED_TYPE__CONSTRUCTOR = TYPE_BUILDER_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Left</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONSTRUCTED_TYPE__LEFT = TYPE_BUILDER_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Right</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONSTRUCTED_TYPE__RIGHT = TYPE_BUILDER_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Constructed Type</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONSTRUCTED_TYPE_FEATURE_COUNT = TYPE_BUILDER_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE__NAME = CLASS_DECL__NAME;

	/**
	 * The feature id for the '<em><b>Block</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE__BLOCK = CLASS_DECL__BLOCK;

	/**
	 * The feature id for the '<em><b>Context</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE__CONTEXT = CLASS_DECL__CONTEXT;

	/**
	 * The feature id for the '<em><b>Constructors</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE__CONSTRUCTORS = CLASS_DECL_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Datatype</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE_FEATURE_COUNT = CLASS_DECL_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE_CONSTRUCTOR__NAME = IVARIABLE_PROVIDER_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Decons</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE_CONSTRUCTOR__DECONS = IVARIABLE_PROVIDER_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Datatype Constructor</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATATYPE_CONSTRUCTOR_FEATURE_COUNT = IVARIABLE_PROVIDER_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Block</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTEND__BLOCK = IVARIABLE_PROVIDER_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Extended Class</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTEND__EXTENDED_CLASS = IVARIABLE_PROVIDER_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTEND__NAME = IVARIABLE_PROVIDER_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Extend</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTEND_FEATURE_COUNT = IVARIABLE_PROVIDER_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_VARIABLE__NAME = NAMED_OBJECT__NAME;

	/**
	 * The number of structural features of the '<em>Expression Variable</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_VARIABLE_FEATURE_COUNT = NAMED_OBJECT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Type</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FILE_IMPORT__TYPE = 0;

	/**
	 * The feature id for the '<em><b>File Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FILE_IMPORT__FILE_NAME = 1;

	/**
	 * The feature id for the '<em><b>File Reference</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FILE_IMPORT__FILE_REFERENCE = 2;

	/**
	 * The number of structural features of the '<em>File Import</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FILE_IMPORT_FEATURE_COUNT = 3;

	/**
	 * The feature id for the '<em><b>Type Inst</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_CALL__TYPE_INST = EXPRESSION__TYPE_INST;

	/**
	 * The feature id for the '<em><b>Arguments</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_CALL__ARGUMENTS = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Owner Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_CALL__OWNER_TYPE = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Class Var Decl</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_CALL__CLASS_VAR_DECL = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Context</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_CALL__CONTEXT = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Wrapped</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_CALL__WRAPPED = EXPRESSION_FEATURE_COUNT + 4;

	/**
	 * The number of structural features of the '<em>Function Call</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_CALL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 5;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL__NAME = IVARIABLE_PROVIDER_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Precedence</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL__PRECEDENCE = IVARIABLE_PROVIDER_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Context</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL__CONTEXT = IVARIABLE_PROVIDER_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Var List</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL__VAR_LIST = IVARIABLE_PROVIDER_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Return Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL__RETURN_TYPE = IVARIABLE_PROVIDER_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Infix</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL__INFIX = IVARIABLE_PROVIDER_FEATURE_COUNT + 5;

	/**
	 * The feature id for the '<em><b>Expr</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL__EXPR = IVARIABLE_PROVIDER_FEATURE_COUNT + 6;

	/**
	 * The feature id for the '<em><b>Generated Lambdas</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL__GENERATED_LAMBDAS = IVARIABLE_PROVIDER_FEATURE_COUNT + 7;

	/**
	 * The number of structural features of the '<em>Function Decl</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FUNCTION_DECL_FEATURE_COUNT = IVARIABLE_PROVIDER_FEATURE_COUNT + 8;

	/**
	 * The feature id for the '<em><b>File Imports</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int GLOBAL_IMPORT__FILE_IMPORTS = 0;

	/**
	 * The feature id for the '<em><b>Project</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int GLOBAL_IMPORT__PROJECT = 1;

	/**
	 * The number of structural features of the '<em>Global Import</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int GLOBAL_IMPORT_FEATURE_COUNT = 2;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.InfixFuncImpl <em>Infix Func</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.InfixFuncImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getInfixFunc()
	 * @generated
	 */
	int INFIX_FUNC = 29;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INFIX_FUNC__NAME = EXPRESSION_VARIABLE__NAME;

	/**
	 * The feature id for the '<em><b>Precedence</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INFIX_FUNC__PRECEDENCE = EXPRESSION_VARIABLE_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Infix Func</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INFIX_FUNC_FEATURE_COUNT = EXPRESSION_VARIABLE_FEATURE_COUNT + 1;

	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.InbuiltInfixImpl <em>Inbuilt Infix</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.InbuiltInfixImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getInbuiltInfix()
	 * @generated
	 */
	int INBUILT_INFIX = 27;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INBUILT_INFIX__NAME = INFIX_FUNC__NAME;

	/**
	 * The feature id for the '<em><b>Precedence</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INBUILT_INFIX__PRECEDENCE = INFIX_FUNC__PRECEDENCE;

	/**
	 * The number of structural features of the '<em>Inbuilt Infix</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INBUILT_INFIX_FEATURE_COUNT = INFIX_FUNC_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Type Inst</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INFIX__TYPE_INST = EXPRESSION__TYPE_INST;

	/**
	 * The feature id for the '<em><b>Left</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INFIX__LEFT = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Func Name</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INFIX__FUNC_NAME = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Right</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INFIX__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Op Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INFIX__OP_NAME = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>Infix</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INFIX_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INST_NAME__NAME = EXPRESSION_VARIABLE__NAME;

	/**
	 * The number of structural features of the '<em>Inst Name</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INST_NAME_FEATURE_COUNT = EXPRESSION_VARIABLE_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE__NAME = IEXPRESSION_CONTAINER_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Class Name</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE__CLASS_NAME = IEXPRESSION_CONTAINER_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Context</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE__CONTEXT = IEXPRESSION_CONTAINER_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Arguments</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE__ARGUMENTS = IEXPRESSION_CONTAINER_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Class Name Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE__CLASS_NAME_NAME = IEXPRESSION_CONTAINER_FEATURE_COUNT + 4;

	/**
	 * The number of structural features of the '<em>Instance</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_FEATURE_COUNT = IEXPRESSION_CONTAINER_FEATURE_COUNT + 5;

	/**
	 * The feature id for the '<em><b>File Imports</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_IMPORT__FILE_IMPORTS = 0;

	/**
	 * The number of structural features of the '<em>Local Import</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_IMPORT_FEATURE_COUNT = 1;

	/**
	 * The feature id for the '<em><b>Decon Name</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_CASE__DECON_NAME = IVARIABLE_PROVIDER_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Variables</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_CASE__VARIABLES = IVARIABLE_PROVIDER_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Expr</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_CASE__EXPR = IVARIABLE_PROVIDER_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Match Case</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_CASE_FEATURE_COUNT = IVARIABLE_PROVIDER_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Type Inst</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_STATEMENT__TYPE_INST = EXPRESSION__TYPE_INST;

	/**
	 * The feature id for the '<em><b>Match</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_STATEMENT__MATCH = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Induct Case</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_STATEMENT__INDUCT_CASE = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Match Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MATCH_STATEMENT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Poly Types</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POLY_CONTEXT__POLY_TYPES = 0;

	/**
	 * The number of structural features of the '<em>Poly Context</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POLY_CONTEXT_FEATURE_COUNT = 1;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POLY_TYPE__NAME = GEN_NAME__NAME;

	/**
	 * The feature id for the '<em><b>Super Types</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POLY_TYPE__SUPER_TYPES = GEN_NAME_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Poly Type</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POLY_TYPE_FEATURE_COUNT = GEN_NAME_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Type Inst</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PREFIX__TYPE_INST = EXPRESSION__TYPE_INST;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PREFIX__NAME = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Elem</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PREFIX__ELEM = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Prefix</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PREFIX_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Type Inst</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUANT_LAMBDA__TYPE_INST = EXPRESSION__TYPE_INST;

	/**
	 * The feature id for the '<em><b>QType</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUANT_LAMBDA__QTYPE = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Context</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUANT_LAMBDA__CONTEXT = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Var List</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUANT_LAMBDA__VAR_LIST = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Expr</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUANT_LAMBDA__EXPR = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>Quant Lambda</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUANT_LAMBDA_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Super Types</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_TYPE_LIST__SUPER_TYPES = 0;

	/**
	 * The number of structural features of the '<em>Super Type List</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_TYPE_LIST_FEATURE_COUNT = 1;

	/**
	 * The feature id for the '<em><b>Theorem Decl</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THEOREM_BODY__THEOREM_DECL = ITHEOREM_CONTAINER_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Theorem Body</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THEOREM_BODY_FEATURE_COUNT = ITHEOREM_CONTAINER_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THEOREM_DECL__NAME = IEXPRESSION_CONTAINER_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Expr</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THEOREM_DECL__EXPR = IEXPRESSION_CONTAINER_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Theorem Decl</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THEOREM_DECL_FEATURE_COUNT = IEXPRESSION_CONTAINER_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL_FILE__NAME = ITHEORY_IMPORT_CACHE_PROVIDER_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Top Level Imports</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL_FILE__TOP_LEVEL_IMPORTS = ITHEORY_IMPORT_CACHE_PROVIDER_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>No Import Elements</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL_FILE__NO_IMPORT_ELEMENTS = ITHEORY_IMPORT_CACHE_PROVIDER_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Top Level File</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL_FILE_FEATURE_COUNT = ITHEORY_IMPORT_CACHE_PROVIDER_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL__NAME = 0;

	/**
	 * The feature id for the '<em><b>Top Level File</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL__TOP_LEVEL_FILE = 1;

	/**
	 * The feature id for the '<em><b>Imported Files</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL__IMPORTED_FILES = 2;

	/**
	 * The number of structural features of the '<em>Top Level</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL_FEATURE_COUNT = 3;

	/**
	 * The feature id for the '<em><b>Global Imports</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL_IMPORT__GLOBAL_IMPORTS = ITHEORY_IMPORT_CACHE_PROVIDER_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Local Imports</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL_IMPORT__LOCAL_IMPORTS = ITHEORY_IMPORT_CACHE_PROVIDER_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Body Elements</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL_IMPORT__BODY_ELEMENTS = ITHEORY_IMPORT_CACHE_PROVIDER_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Import Refs</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL_IMPORT__IMPORT_REFS = ITHEORY_IMPORT_CACHE_PROVIDER_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>Top Level Import</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_LEVEL_IMPORT_FEATURE_COUNT = ITHEORY_IMPORT_CACHE_PROVIDER_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Type Name</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_CONSTRUCTOR__TYPE_NAME = TYPE_BUILDER_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Context</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_CONSTRUCTOR__CONTEXT = TYPE_BUILDER_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Type Constructor</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_CONSTRUCTOR_FEATURE_COUNT = TYPE_BUILDER_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Child</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_CONSTR_BRACKET__CHILD = TYPE_BUILDER_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Type Constr Bracket</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_CONSTR_BRACKET_FEATURE_COUNT = TYPE_BUILDER_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Type Name</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECL_CONTEXT__TYPE_NAME = 0;

	/**
	 * The number of structural features of the '<em>Type Decl Context</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECL_CONTEXT_FEATURE_COUNT = 1;


	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.TypePowerSetImpl <em>Type Power Set</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.TypePowerSetImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypePowerSet()
	 * @generated
	 */
	int TYPE_POWER_SET = 50;

	/**
	 * The feature id for the '<em><b>Child</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_POWER_SET__CHILD = TYPE_BUILDER_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Type Power Set</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_POWER_SET_FEATURE_COUNT = TYPE_BUILDER_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_VARIABLE__NAME = EXPRESSION_VARIABLE__NAME;

	/**
	 * The number of structural features of the '<em>Typed Variable</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_VARIABLE_FEATURE_COUNT = EXPRESSION_VARIABLE_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Variables Of Type</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_VARIABLE_LIST__VARIABLES_OF_TYPE = 0;

	/**
	 * The number of structural features of the '<em>Typed Variable List</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_VARIABLE_LIST_FEATURE_COUNT = 1;

	/**
	 * The feature id for the '<em><b>Type Var</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int VARIABLE_TYPING__TYPE_VAR = 0;

	/**
	 * The feature id for the '<em><b>Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int VARIABLE_TYPING__TYPE = 1;

	/**
	 * The number of structural features of the '<em>Variable Typing</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int VARIABLE_TYPING_FEATURE_COUNT = 2;

	/**
	 * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHERE__EXPRESSIONS = 0;

	/**
	 * The number of structural features of the '<em>Where</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHERE_FEATURE_COUNT = 1;


	/**
	 * The meta object id for the '{@link ac.soton.bsharp.bSharp.impl.WrappedInfixImpl <em>Wrapped Infix</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see ac.soton.bsharp.bSharp.impl.WrappedInfixImpl
	 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getWrappedInfix()
	 * @generated
	 */
	int WRAPPED_INFIX = 55;

	/**
	 * The feature id for the '<em><b>Func Name</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WRAPPED_INFIX__FUNC_NAME = 0;

	/**
	 * The feature id for the '<em><b>Inbuilt</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WRAPPED_INFIX__INBUILT = 1;

	/**
	 * The number of structural features of the '<em>Wrapped Infix</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WRAPPED_INFIX_FEATURE_COUNT = 2;


	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.IEventBPrefixProvider <em>IEvent BPrefix Provider</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>IEvent BPrefix Provider</em>'.
	 * @see ac.soton.bsharp.bSharp.IEventBPrefixProvider
	 * @generated
	 */
	EClass getIEventBPrefixProvider();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TopLevel <em>Top Level</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Top Level</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevel
	 * @generated
	 */
	EClass getTopLevel();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.TopLevel#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevel#getName()
	 * @see #getTopLevel()
	 * @generated
	 */
	EAttribute getTopLevel_Name();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.TopLevel#getTopLevelFile <em>Top Level File</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Top Level File</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevel#getTopLevelFile()
	 * @see #getTopLevel()
	 * @generated
	 */
	EReference getTopLevel_TopLevelFile();

	/**
	 * Returns the meta object for the reference list '{@link ac.soton.bsharp.bSharp.TopLevel#getImportedFiles <em>Imported Files</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Imported Files</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevel#getImportedFiles()
	 * @see #getTopLevel()
	 * @generated
	 */
	EReference getTopLevel_ImportedFiles();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TopLevelFile <em>Top Level File</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Top Level File</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevelFile
	 * @generated
	 */
	EClass getTopLevelFile();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.TopLevelFile#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevelFile#getName()
	 * @see #getTopLevelFile()
	 * @generated
	 */
	EAttribute getTopLevelFile_Name();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TopLevelFile#getTopLevelImports <em>Top Level Imports</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Top Level Imports</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevelFile#getTopLevelImports()
	 * @see #getTopLevelFile()
	 * @generated
	 */
	EReference getTopLevelFile_TopLevelImports();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TopLevelFile#getNoImportElements <em>No Import Elements</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>No Import Elements</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevelFile#getNoImportElements()
	 * @see #getTopLevelFile()
	 * @generated
	 */
	EReference getTopLevelFile_NoImportElements();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TopLevelImport <em>Top Level Import</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Top Level Import</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevelImport
	 * @generated
	 */
	EClass getTopLevelImport();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TopLevelImport#getGlobalImports <em>Global Imports</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Global Imports</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevelImport#getGlobalImports()
	 * @see #getTopLevelImport()
	 * @generated
	 */
	EReference getTopLevelImport_GlobalImports();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TopLevelImport#getLocalImports <em>Local Imports</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Local Imports</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevelImport#getLocalImports()
	 * @see #getTopLevelImport()
	 * @generated
	 */
	EReference getTopLevelImport_LocalImports();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TopLevelImport#getBodyElements <em>Body Elements</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Body Elements</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevelImport#getBodyElements()
	 * @see #getTopLevelImport()
	 * @generated
	 */
	EReference getTopLevelImport_BodyElements();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TopLevelImport#getImportRefs <em>Import Refs</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Import Refs</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevelImport#getImportRefs()
	 * @see #getTopLevelImport()
	 * @generated
	 */
	EReference getTopLevelImport_ImportRefs();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.ClassDecl <em>Class Decl</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Class Decl</em>'.
	 * @see ac.soton.bsharp.bSharp.ClassDecl
	 * @generated
	 */
	EClass getClassDecl();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.ClassDecl#getContext <em>Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Context</em>'.
	 * @see ac.soton.bsharp.bSharp.ClassDecl#getContext()
	 * @see #getClassDecl()
	 * @generated
	 */
	EReference getClassDecl_Context();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.BSClass <em>BS Class</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>BS Class</em>'.
	 * @see ac.soton.bsharp.bSharp.BSClass
	 * @generated
	 */
	EClass getBSClass();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.BSClass#getSupertypes <em>Supertypes</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Supertypes</em>'.
	 * @see ac.soton.bsharp.bSharp.BSClass#getSupertypes()
	 * @see #getBSClass()
	 * @generated
	 */
	EReference getBSClass_Supertypes();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.BSClass#getVarList <em>Var List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Var List</em>'.
	 * @see ac.soton.bsharp.bSharp.BSClass#getVarList()
	 * @see #getBSClass()
	 * @generated
	 */
	EReference getBSClass_VarList();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.BSClass#getWhere <em>Where</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Where</em>'.
	 * @see ac.soton.bsharp.bSharp.BSClass#getWhere()
	 * @see #getBSClass()
	 * @generated
	 */
	EReference getBSClass_Where();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.BSClass#getInstName <em>Inst Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Inst Name</em>'.
	 * @see ac.soton.bsharp.bSharp.BSClass#getInstName()
	 * @see #getBSClass()
	 * @generated
	 */
	EReference getBSClass_InstName();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.InstName <em>Inst Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Inst Name</em>'.
	 * @see ac.soton.bsharp.bSharp.InstName
	 * @generated
	 */
	EClass getInstName();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.BSharpBlock <em>Block</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Block</em>'.
	 * @see ac.soton.bsharp.bSharp.BSharpBlock
	 * @generated
	 */
	EClass getBSharpBlock();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.BSharpBlock#getFunctions <em>Functions</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Functions</em>'.
	 * @see ac.soton.bsharp.bSharp.BSharpBlock#getFunctions()
	 * @see #getBSharpBlock()
	 * @generated
	 */
	EReference getBSharpBlock_Functions();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.BSharpBlock#getTheorems <em>Theorems</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Theorems</em>'.
	 * @see ac.soton.bsharp.bSharp.BSharpBlock#getTheorems()
	 * @see #getBSharpBlock()
	 * @generated
	 */
	EReference getBSharpBlock_Theorems();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.GenName <em>Gen Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Gen Name</em>'.
	 * @see ac.soton.bsharp.bSharp.GenName
	 * @generated
	 */
	EClass getGenName();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.PolyContext <em>Poly Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Poly Context</em>'.
	 * @see ac.soton.bsharp.bSharp.PolyContext
	 * @generated
	 */
	EClass getPolyContext();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.PolyContext#getPolyTypes <em>Poly Types</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Poly Types</em>'.
	 * @see ac.soton.bsharp.bSharp.PolyContext#getPolyTypes()
	 * @see #getPolyContext()
	 * @generated
	 */
	EReference getPolyContext_PolyTypes();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.PolyType <em>Poly Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Poly Type</em>'.
	 * @see ac.soton.bsharp.bSharp.PolyType
	 * @generated
	 */
	EClass getPolyType();

	/**
	 * Returns the meta object for the reference list '{@link ac.soton.bsharp.bSharp.PolyType#getSuperTypes <em>Super Types</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Super Types</em>'.
	 * @see ac.soton.bsharp.bSharp.PolyType#getSuperTypes()
	 * @see #getPolyType()
	 * @generated
	 */
	EReference getPolyType_SuperTypes();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.SuperTypeList <em>Super Type List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Super Type List</em>'.
	 * @see ac.soton.bsharp.bSharp.SuperTypeList
	 * @generated
	 */
	EClass getSuperTypeList();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.SuperTypeList#getSuperTypes <em>Super Types</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Super Types</em>'.
	 * @see ac.soton.bsharp.bSharp.SuperTypeList#getSuperTypes()
	 * @see #getSuperTypeList()
	 * @generated
	 */
	EReference getSuperTypeList_SuperTypes();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.ConstructedType <em>Constructed Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Constructed Type</em>'.
	 * @see ac.soton.bsharp.bSharp.ConstructedType
	 * @generated
	 */
	EClass getConstructedType();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.ConstructedType#getConstructor <em>Constructor</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Constructor</em>'.
	 * @see ac.soton.bsharp.bSharp.ConstructedType#getConstructor()
	 * @see #getConstructedType()
	 * @generated
	 */
	EAttribute getConstructedType_Constructor();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.ConstructedType#getLeft <em>Left</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Left</em>'.
	 * @see ac.soton.bsharp.bSharp.ConstructedType#getLeft()
	 * @see #getConstructedType()
	 * @generated
	 */
	EReference getConstructedType_Left();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.ConstructedType#getRight <em>Right</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Right</em>'.
	 * @see ac.soton.bsharp.bSharp.ConstructedType#getRight()
	 * @see #getConstructedType()
	 * @generated
	 */
	EReference getConstructedType_Right();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TypeConstructor <em>Type Constructor</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type Constructor</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeConstructor
	 * @generated
	 */
	EClass getTypeConstructor();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.TypeConstructor#getTypeName <em>Type Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Type Name</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeConstructor#getTypeName()
	 * @see #getTypeConstructor()
	 * @generated
	 */
	EReference getTypeConstructor_TypeName();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.TypeConstructor#getContext <em>Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Context</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeConstructor#getContext()
	 * @see #getTypeConstructor()
	 * @generated
	 */
	EReference getTypeConstructor_Context();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TypeConstrBracket <em>Type Constr Bracket</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type Constr Bracket</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeConstrBracket
	 * @generated
	 */
	EClass getTypeConstrBracket();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.TypeConstrBracket#getChild <em>Child</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Child</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeConstrBracket#getChild()
	 * @see #getTypeConstrBracket()
	 * @generated
	 */
	EReference getTypeConstrBracket_Child();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TypeDeclContext <em>Type Decl Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type Decl Context</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeDeclContext
	 * @generated
	 */
	EClass getTypeDeclContext();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TypeDeclContext#getTypeName <em>Type Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Type Name</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeDeclContext#getTypeName()
	 * @see #getTypeDeclContext()
	 * @generated
	 */
	EReference getTypeDeclContext_TypeName();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Where <em>Where</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Where</em>'.
	 * @see ac.soton.bsharp.bSharp.Where
	 * @generated
	 */
	EClass getWhere();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.Where#getExpressions <em>Expressions</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Expressions</em>'.
	 * @see ac.soton.bsharp.bSharp.Where#getExpressions()
	 * @see #getWhere()
	 * @generated
	 */
	EReference getWhere_Expressions();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.WrappedInfix <em>Wrapped Infix</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Wrapped Infix</em>'.
	 * @see ac.soton.bsharp.bSharp.WrappedInfix
	 * @generated
	 */
	EClass getWrappedInfix();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.WrappedInfix#getFuncName <em>Func Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Func Name</em>'.
	 * @see ac.soton.bsharp.bSharp.WrappedInfix#getFuncName()
	 * @see #getWrappedInfix()
	 * @generated
	 */
	EReference getWrappedInfix_FuncName();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.WrappedInfix#getInbuilt <em>Inbuilt</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Inbuilt</em>'.
	 * @see ac.soton.bsharp.bSharp.WrappedInfix#getInbuilt()
	 * @see #getWrappedInfix()
	 * @generated
	 */
	EAttribute getWrappedInfix_Inbuilt();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Datatype <em>Datatype</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Datatype</em>'.
	 * @see ac.soton.bsharp.bSharp.Datatype
	 * @generated
	 */
	EClass getDatatype();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.Datatype#getConstructors <em>Constructors</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Constructors</em>'.
	 * @see ac.soton.bsharp.bSharp.Datatype#getConstructors()
	 * @see #getDatatype()
	 * @generated
	 */
	EReference getDatatype_Constructors();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.DatatypeConstructor <em>Datatype Constructor</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Datatype Constructor</em>'.
	 * @see ac.soton.bsharp.bSharp.DatatypeConstructor
	 * @generated
	 */
	EClass getDatatypeConstructor();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.DatatypeConstructor#getDecons <em>Decons</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Decons</em>'.
	 * @see ac.soton.bsharp.bSharp.DatatypeConstructor#getDecons()
	 * @see #getDatatypeConstructor()
	 * @generated
	 */
	EReference getDatatypeConstructor_Decons();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Extend <em>Extend</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Extend</em>'.
	 * @see ac.soton.bsharp.bSharp.Extend
	 * @generated
	 */
	EClass getExtend();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.Extend#getExtendedClass <em>Extended Class</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Extended Class</em>'.
	 * @see ac.soton.bsharp.bSharp.Extend#getExtendedClass()
	 * @see #getExtend()
	 * @generated
	 */
	EReference getExtend_ExtendedClass();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.Extend#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see ac.soton.bsharp.bSharp.Extend#getName()
	 * @see #getExtend()
	 * @generated
	 */
	EAttribute getExtend_Name();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.FunctionDecl <em>Function Decl</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Function Decl</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionDecl
	 * @generated
	 */
	EClass getFunctionDecl();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.FunctionDecl#getContext <em>Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Context</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionDecl#getContext()
	 * @see #getFunctionDecl()
	 * @generated
	 */
	EReference getFunctionDecl_Context();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.FunctionDecl#getVarList <em>Var List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Var List</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionDecl#getVarList()
	 * @see #getFunctionDecl()
	 * @generated
	 */
	EReference getFunctionDecl_VarList();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.FunctionDecl#getReturnType <em>Return Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Return Type</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionDecl#getReturnType()
	 * @see #getFunctionDecl()
	 * @generated
	 */
	EReference getFunctionDecl_ReturnType();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.FunctionDecl#getInfix <em>Infix</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Infix</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionDecl#getInfix()
	 * @see #getFunctionDecl()
	 * @generated
	 */
	EAttribute getFunctionDecl_Infix();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.FunctionDecl#getExpr <em>Expr</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expr</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionDecl#getExpr()
	 * @see #getFunctionDecl()
	 * @generated
	 */
	EReference getFunctionDecl_Expr();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.FunctionDecl#getGeneratedLambdas <em>Generated Lambdas</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Generated Lambdas</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionDecl#getGeneratedLambdas()
	 * @see #getFunctionDecl()
	 * @generated
	 */
	EReference getFunctionDecl_GeneratedLambdas();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.MatchStatement <em>Match Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Match Statement</em>'.
	 * @see ac.soton.bsharp.bSharp.MatchStatement
	 * @generated
	 */
	EClass getMatchStatement();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.MatchStatement#getMatch <em>Match</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Match</em>'.
	 * @see ac.soton.bsharp.bSharp.MatchStatement#getMatch()
	 * @see #getMatchStatement()
	 * @generated
	 */
	EReference getMatchStatement_Match();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.MatchStatement#getInductCase <em>Induct Case</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Induct Case</em>'.
	 * @see ac.soton.bsharp.bSharp.MatchStatement#getInductCase()
	 * @see #getMatchStatement()
	 * @generated
	 */
	EReference getMatchStatement_InductCase();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.MatchCase <em>Match Case</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Match Case</em>'.
	 * @see ac.soton.bsharp.bSharp.MatchCase
	 * @generated
	 */
	EClass getMatchCase();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.MatchCase#getDeconName <em>Decon Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Decon Name</em>'.
	 * @see ac.soton.bsharp.bSharp.MatchCase#getDeconName()
	 * @see #getMatchCase()
	 * @generated
	 */
	EReference getMatchCase_DeconName();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.MatchCase#getVariables <em>Variables</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Variables</em>'.
	 * @see ac.soton.bsharp.bSharp.MatchCase#getVariables()
	 * @see #getMatchCase()
	 * @generated
	 */
	EReference getMatchCase_Variables();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.MatchCase#getExpr <em>Expr</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expr</em>'.
	 * @see ac.soton.bsharp.bSharp.MatchCase#getExpr()
	 * @see #getMatchCase()
	 * @generated
	 */
	EReference getMatchCase_Expr();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TheoremBody <em>Theorem Body</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Theorem Body</em>'.
	 * @see ac.soton.bsharp.bSharp.TheoremBody
	 * @generated
	 */
	EClass getTheoremBody();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TheoremBody#getTheoremDecl <em>Theorem Decl</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Theorem Decl</em>'.
	 * @see ac.soton.bsharp.bSharp.TheoremBody#getTheoremDecl()
	 * @see #getTheoremBody()
	 * @generated
	 */
	EReference getTheoremBody_TheoremDecl();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TheoremDecl <em>Theorem Decl</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Theorem Decl</em>'.
	 * @see ac.soton.bsharp.bSharp.TheoremDecl
	 * @generated
	 */
	EClass getTheoremDecl();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.TheoremDecl#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see ac.soton.bsharp.bSharp.TheoremDecl#getName()
	 * @see #getTheoremDecl()
	 * @generated
	 */
	EAttribute getTheoremDecl_Name();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.TheoremDecl#getExpr <em>Expr</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expr</em>'.
	 * @see ac.soton.bsharp.bSharp.TheoremDecl#getExpr()
	 * @see #getTheoremDecl()
	 * @generated
	 */
	EReference getTheoremDecl_Expr();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TypedVariableList <em>Typed Variable List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Typed Variable List</em>'.
	 * @see ac.soton.bsharp.bSharp.TypedVariableList
	 * @generated
	 */
	EClass getTypedVariableList();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.TypedVariableList#getVariablesOfType <em>Variables Of Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Variables Of Type</em>'.
	 * @see ac.soton.bsharp.bSharp.TypedVariableList#getVariablesOfType()
	 * @see #getTypedVariableList()
	 * @generated
	 */
	EReference getTypedVariableList_VariablesOfType();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.VariableTyping <em>Variable Typing</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Variable Typing</em>'.
	 * @see ac.soton.bsharp.bSharp.VariableTyping
	 * @generated
	 */
	EClass getVariableTyping();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.VariableTyping#getTypeVar <em>Type Var</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Type Var</em>'.
	 * @see ac.soton.bsharp.bSharp.VariableTyping#getTypeVar()
	 * @see #getVariableTyping()
	 * @generated
	 */
	EReference getVariableTyping_TypeVar();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.VariableTyping#getType <em>Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Type</em>'.
	 * @see ac.soton.bsharp.bSharp.VariableTyping#getType()
	 * @see #getVariableTyping()
	 * @generated
	 */
	EReference getVariableTyping_Type();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TypedVariable <em>Typed Variable</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Typed Variable</em>'.
	 * @see ac.soton.bsharp.bSharp.TypedVariable
	 * @generated
	 */
	EClass getTypedVariable();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.QuantLambda <em>Quant Lambda</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Quant Lambda</em>'.
	 * @see ac.soton.bsharp.bSharp.QuantLambda
	 * @generated
	 */
	EClass getQuantLambda();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.QuantLambda#getQType <em>QType</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>QType</em>'.
	 * @see ac.soton.bsharp.bSharp.QuantLambda#getQType()
	 * @see #getQuantLambda()
	 * @generated
	 */
	EAttribute getQuantLambda_QType();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.QuantLambda#getContext <em>Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Context</em>'.
	 * @see ac.soton.bsharp.bSharp.QuantLambda#getContext()
	 * @see #getQuantLambda()
	 * @generated
	 */
	EReference getQuantLambda_Context();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.QuantLambda#getVarList <em>Var List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Var List</em>'.
	 * @see ac.soton.bsharp.bSharp.QuantLambda#getVarList()
	 * @see #getQuantLambda()
	 * @generated
	 */
	EReference getQuantLambda_VarList();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.QuantLambda#getExpr <em>Expr</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expr</em>'.
	 * @see ac.soton.bsharp.bSharp.QuantLambda#getExpr()
	 * @see #getQuantLambda()
	 * @generated
	 */
	EReference getQuantLambda_Expr();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Expression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Expression</em>'.
	 * @see ac.soton.bsharp.bSharp.Expression
	 * @generated
	 */
	EClass getExpression();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.Expression#getTypeInst <em>Type Inst</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Type Inst</em>'.
	 * @see ac.soton.bsharp.bSharp.Expression#getTypeInst()
	 * @see #getExpression()
	 * @generated
	 */
	EReference getExpression_TypeInst();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.FunctionCall <em>Function Call</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Function Call</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionCall
	 * @generated
	 */
	EClass getFunctionCall();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.FunctionCall#getArguments <em>Arguments</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Arguments</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionCall#getArguments()
	 * @see #getFunctionCall()
	 * @generated
	 */
	EReference getFunctionCall_Arguments();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.FunctionCall#getOwnerType <em>Owner Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Owner Type</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionCall#getOwnerType()
	 * @see #getFunctionCall()
	 * @generated
	 */
	EReference getFunctionCall_OwnerType();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.FunctionCall#getClassVarDecl <em>Class Var Decl</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Class Var Decl</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionCall#getClassVarDecl()
	 * @see #getFunctionCall()
	 * @generated
	 */
	EReference getFunctionCall_ClassVarDecl();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.FunctionCall#getContext <em>Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Context</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionCall#getContext()
	 * @see #getFunctionCall()
	 * @generated
	 */
	EReference getFunctionCall_Context();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.FunctionCall#getWrapped <em>Wrapped</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Wrapped</em>'.
	 * @see ac.soton.bsharp.bSharp.FunctionCall#getWrapped()
	 * @see #getFunctionCall()
	 * @generated
	 */
	EReference getFunctionCall_Wrapped();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.ClassVarDecl <em>Class Var Decl</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Class Var Decl</em>'.
	 * @see ac.soton.bsharp.bSharp.ClassVarDecl
	 * @generated
	 */
	EClass getClassVarDecl();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.ClassVarDecl#getOwnerType <em>Owner Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Owner Type</em>'.
	 * @see ac.soton.bsharp.bSharp.ClassVarDecl#getOwnerType()
	 * @see #getClassVarDecl()
	 * @generated
	 */
	EReference getClassVarDecl_OwnerType();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.ClassVarDecl#getTypeInst <em>Type Inst</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Type Inst</em>'.
	 * @see ac.soton.bsharp.bSharp.ClassVarDecl#getTypeInst()
	 * @see #getClassVarDecl()
	 * @generated
	 */
	EReference getClassVarDecl_TypeInst();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Prefix <em>Prefix</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Prefix</em>'.
	 * @see ac.soton.bsharp.bSharp.Prefix
	 * @generated
	 */
	EClass getPrefix();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.Prefix#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see ac.soton.bsharp.bSharp.Prefix#getName()
	 * @see #getPrefix()
	 * @generated
	 */
	EAttribute getPrefix_Name();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.Prefix#getElem <em>Elem</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Elem</em>'.
	 * @see ac.soton.bsharp.bSharp.Prefix#getElem()
	 * @see #getPrefix()
	 * @generated
	 */
	EReference getPrefix_Elem();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Bracket <em>Bracket</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Bracket</em>'.
	 * @see ac.soton.bsharp.bSharp.Bracket
	 * @generated
	 */
	EClass getBracket();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.Bracket#getChild <em>Child</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Child</em>'.
	 * @see ac.soton.bsharp.bSharp.Bracket#getChild()
	 * @see #getBracket()
	 * @generated
	 */
	EReference getBracket_Child();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.ExpressionVariable <em>Expression Variable</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Expression Variable</em>'.
	 * @see ac.soton.bsharp.bSharp.ExpressionVariable
	 * @generated
	 */
	EClass getExpressionVariable();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Instance <em>Instance</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Instance</em>'.
	 * @see ac.soton.bsharp.bSharp.Instance
	 * @generated
	 */
	EClass getInstance();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.Instance#getClassName <em>Class Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Class Name</em>'.
	 * @see ac.soton.bsharp.bSharp.Instance#getClassName()
	 * @see #getInstance()
	 * @generated
	 */
	EReference getInstance_ClassName();

	/**
	 * Returns the meta object for the reference list '{@link ac.soton.bsharp.bSharp.Instance#getContext <em>Context</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Context</em>'.
	 * @see ac.soton.bsharp.bSharp.Instance#getContext()
	 * @see #getInstance()
	 * @generated
	 */
	EReference getInstance_Context();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.Instance#getArguments <em>Arguments</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Arguments</em>'.
	 * @see ac.soton.bsharp.bSharp.Instance#getArguments()
	 * @see #getInstance()
	 * @generated
	 */
	EReference getInstance_Arguments();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.Instance#getClassNameName <em>Class Name Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Class Name Name</em>'.
	 * @see ac.soton.bsharp.bSharp.Instance#getClassNameName()
	 * @see #getInstance()
	 * @generated
	 */
	EAttribute getInstance_ClassNameName();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Infix <em>Infix</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Infix</em>'.
	 * @see ac.soton.bsharp.bSharp.Infix
	 * @generated
	 */
	EClass getInfix();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.Infix#getLeft <em>Left</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Left</em>'.
	 * @see ac.soton.bsharp.bSharp.Infix#getLeft()
	 * @see #getInfix()
	 * @generated
	 */
	EReference getInfix_Left();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.Infix#getFuncName <em>Func Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Func Name</em>'.
	 * @see ac.soton.bsharp.bSharp.Infix#getFuncName()
	 * @see #getInfix()
	 * @generated
	 */
	EReference getInfix_FuncName();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.Infix#getRight <em>Right</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Right</em>'.
	 * @see ac.soton.bsharp.bSharp.Infix#getRight()
	 * @see #getInfix()
	 * @generated
	 */
	EReference getInfix_Right();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.Infix#getOpName <em>Op Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Op Name</em>'.
	 * @see ac.soton.bsharp.bSharp.Infix#getOpName()
	 * @see #getInfix()
	 * @generated
	 */
	EAttribute getInfix_OpName();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.InfixFunc <em>Infix Func</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Infix Func</em>'.
	 * @see ac.soton.bsharp.bSharp.InfixFunc
	 * @generated
	 */
	EClass getInfixFunc();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.InfixFunc#getPrecedence <em>Precedence</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Precedence</em>'.
	 * @see ac.soton.bsharp.bSharp.InfixFunc#getPrecedence()
	 * @see #getInfixFunc()
	 * @generated
	 */
	EAttribute getInfixFunc_Precedence();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.IVariableProvider <em>IVariable Provider</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>IVariable Provider</em>'.
	 * @see ac.soton.bsharp.bSharp.IVariableProvider
	 * @generated
	 */
	EClass getIVariableProvider();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.IPolyTypeProvider <em>IPoly Type Provider</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>IPoly Type Provider</em>'.
	 * @see ac.soton.bsharp.bSharp.IPolyTypeProvider
	 * @generated
	 */
	EClass getIPolyTypeProvider();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.IClassInstance <em>IClass Instance</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>IClass Instance</em>'.
	 * @see ac.soton.bsharp.bSharp.IClassInstance
	 * @generated
	 */
	EClass getIClassInstance();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.IExpressionContainer <em>IExpression Container</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>IExpression Container</em>'.
	 * @see ac.soton.bsharp.bSharp.IExpressionContainer
	 * @generated
	 */
	EClass getIExpressionContainer();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.ITheoryImportCacheProvider <em>ITheory Import Cache Provider</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>ITheory Import Cache Provider</em>'.
	 * @see ac.soton.bsharp.bSharp.ITheoryImportCacheProvider
	 * @generated
	 */
	EClass getITheoryImportCacheProvider();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.ITheoremContainer <em>ITheorem Container</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>ITheorem Container</em>'.
	 * @see ac.soton.bsharp.bSharp.ITheoremContainer
	 * @generated
	 */
	EClass getITheoremContainer();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.IBodyElementsContainer <em>IBody Elements Container</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>IBody Elements Container</em>'.
	 * @see ac.soton.bsharp.bSharp.IBodyElementsContainer
	 * @generated
	 */
	EClass getIBodyElementsContainer();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.IVarType <em>IVar Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>IVar Type</em>'.
	 * @see ac.soton.bsharp.bSharp.IVarType
	 * @generated
	 */
	EClass getIVarType();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.Type <em>Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type</em>'.
	 * @see ac.soton.bsharp.bSharp.Type
	 * @generated
	 */
	EClass getType();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TopLevelInstance <em>Top Level Instance</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Top Level Instance</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevelInstance
	 * @generated
	 */
	EClass getTopLevelInstance();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.TopLevelInstance#getBlock <em>Block</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Block</em>'.
	 * @see ac.soton.bsharp.bSharp.TopLevelInstance#getBlock()
	 * @see #getTopLevelInstance()
	 * @generated
	 */
	EReference getTopLevelInstance_Block();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.NamedObject <em>Named Object</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Named Object</em>'.
	 * @see ac.soton.bsharp.bSharp.NamedObject
	 * @generated
	 */
	EClass getNamedObject();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.NamedObject#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see ac.soton.bsharp.bSharp.NamedObject#getName()
	 * @see #getNamedObject()
	 * @generated
	 */
	EAttribute getNamedObject_Name();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TypeBuilder <em>Type Builder</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type Builder</em>'.
	 * @see ac.soton.bsharp.bSharp.TypeBuilder
	 * @generated
	 */
	EClass getTypeBuilder();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.TypePowerSet <em>Type Power Set</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type Power Set</em>'.
	 * @see ac.soton.bsharp.bSharp.TypePowerSet
	 * @generated
	 */
	EClass getTypePowerSet();

	/**
	 * Returns the meta object for the containment reference '{@link ac.soton.bsharp.bSharp.TypePowerSet#getChild <em>Child</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Child</em>'.
	 * @see ac.soton.bsharp.bSharp.TypePowerSet#getChild()
	 * @see #getTypePowerSet()
	 * @generated
	 */
	EReference getTypePowerSet_Child();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.GlobalImport <em>Global Import</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Global Import</em>'.
	 * @see ac.soton.bsharp.bSharp.GlobalImport
	 * @generated
	 */
	EClass getGlobalImport();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.GlobalImport#getFileImports <em>File Imports</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>File Imports</em>'.
	 * @see ac.soton.bsharp.bSharp.GlobalImport#getFileImports()
	 * @see #getGlobalImport()
	 * @generated
	 */
	EReference getGlobalImport_FileImports();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.GlobalImport#getProject <em>Project</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Project</em>'.
	 * @see ac.soton.bsharp.bSharp.GlobalImport#getProject()
	 * @see #getGlobalImport()
	 * @generated
	 */
	EAttribute getGlobalImport_Project();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.InbuiltInfix <em>Inbuilt Infix</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Inbuilt Infix</em>'.
	 * @see ac.soton.bsharp.bSharp.InbuiltInfix
	 * @generated
	 */
	EClass getInbuiltInfix();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.FileImport <em>File Import</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>File Import</em>'.
	 * @see ac.soton.bsharp.bSharp.FileImport
	 * @generated
	 */
	EClass getFileImport();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.FileImport#getFileName <em>File Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>File Name</em>'.
	 * @see ac.soton.bsharp.bSharp.FileImport#getFileName()
	 * @see #getFileImport()
	 * @generated
	 */
	EAttribute getFileImport_FileName();

	/**
	 * Returns the meta object for the reference '{@link ac.soton.bsharp.bSharp.FileImport#getFileReference <em>File Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>File Reference</em>'.
	 * @see ac.soton.bsharp.bSharp.FileImport#getFileReference()
	 * @see #getFileImport()
	 * @generated
	 */
	EReference getFileImport_FileReference();

	/**
	 * Returns the meta object for the attribute '{@link ac.soton.bsharp.bSharp.FileImport#getType <em>Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Type</em>'.
	 * @see ac.soton.bsharp.bSharp.FileImport#getType()
	 * @see #getFileImport()
	 * @generated
	 */
	EAttribute getFileImport_Type();

	/**
	 * Returns the meta object for class '{@link ac.soton.bsharp.bSharp.LocalImport <em>Local Import</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Local Import</em>'.
	 * @see ac.soton.bsharp.bSharp.LocalImport
	 * @generated
	 */
	EClass getLocalImport();

	/**
	 * Returns the meta object for the containment reference list '{@link ac.soton.bsharp.bSharp.LocalImport#getFileImports <em>File Imports</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>File Imports</em>'.
	 * @see ac.soton.bsharp.bSharp.LocalImport#getFileImports()
	 * @see #getLocalImport()
	 * @generated
	 */
	EReference getLocalImport_FileImports();

	/**
	 * Returns the factory that creates the instances of the model.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the factory that creates the instances of the model.
	 * @generated
	 */
	BSharpFactory getBSharpFactory();

	/**
	 * <!-- begin-user-doc -->
	 * Defines literals for the meta objects that represent
	 * <ul>
	 *   <li>each class,</li>
	 *   <li>each feature of each class,</li>
	 *   <li>each enum,</li>
	 *   <li>and each data type</li>
	 * </ul>
	 * <!-- end-user-doc -->
	 * @generated
	 */
	interface Literals {
		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.IEventBPrefixProvider <em>IEvent BPrefix Provider</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.IEventBPrefixProvider
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIEventBPrefixProvider()
		 * @generated
		 */
		EClass IEVENT_BPREFIX_PROVIDER = eINSTANCE.getIEventBPrefixProvider();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TopLevelImpl <em>Top Level</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TopLevelImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTopLevel()
		 * @generated
		 */
		EClass TOP_LEVEL = eINSTANCE.getTopLevel();

		/**
		 * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute TOP_LEVEL__NAME = eINSTANCE.getTopLevel_Name();

		/**
		 * The meta object literal for the '<em><b>Top Level File</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP_LEVEL__TOP_LEVEL_FILE = eINSTANCE.getTopLevel_TopLevelFile();

		/**
		 * The meta object literal for the '<em><b>Imported Files</b></em>' reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP_LEVEL__IMPORTED_FILES = eINSTANCE.getTopLevel_ImportedFiles();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TopLevelFileImpl <em>Top Level File</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TopLevelFileImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTopLevelFile()
		 * @generated
		 */
		EClass TOP_LEVEL_FILE = eINSTANCE.getTopLevelFile();

		/**
		 * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute TOP_LEVEL_FILE__NAME = eINSTANCE.getTopLevelFile_Name();

		/**
		 * The meta object literal for the '<em><b>Top Level Imports</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP_LEVEL_FILE__TOP_LEVEL_IMPORTS = eINSTANCE.getTopLevelFile_TopLevelImports();

		/**
		 * The meta object literal for the '<em><b>No Import Elements</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP_LEVEL_FILE__NO_IMPORT_ELEMENTS = eINSTANCE.getTopLevelFile_NoImportElements();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TopLevelImportImpl <em>Top Level Import</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TopLevelImportImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTopLevelImport()
		 * @generated
		 */
		EClass TOP_LEVEL_IMPORT = eINSTANCE.getTopLevelImport();

		/**
		 * The meta object literal for the '<em><b>Global Imports</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP_LEVEL_IMPORT__GLOBAL_IMPORTS = eINSTANCE.getTopLevelImport_GlobalImports();

		/**
		 * The meta object literal for the '<em><b>Local Imports</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP_LEVEL_IMPORT__LOCAL_IMPORTS = eINSTANCE.getTopLevelImport_LocalImports();

		/**
		 * The meta object literal for the '<em><b>Body Elements</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP_LEVEL_IMPORT__BODY_ELEMENTS = eINSTANCE.getTopLevelImport_BodyElements();

		/**
		 * The meta object literal for the '<em><b>Import Refs</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP_LEVEL_IMPORT__IMPORT_REFS = eINSTANCE.getTopLevelImport_ImportRefs();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.ClassDeclImpl <em>Class Decl</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.ClassDeclImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getClassDecl()
		 * @generated
		 */
		EClass CLASS_DECL = eINSTANCE.getClassDecl();

		/**
		 * The meta object literal for the '<em><b>Context</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference CLASS_DECL__CONTEXT = eINSTANCE.getClassDecl_Context();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.BSClassImpl <em>BS Class</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.BSClassImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getBSClass()
		 * @generated
		 */
		EClass BS_CLASS = eINSTANCE.getBSClass();

		/**
		 * The meta object literal for the '<em><b>Supertypes</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference BS_CLASS__SUPERTYPES = eINSTANCE.getBSClass_Supertypes();

		/**
		 * The meta object literal for the '<em><b>Var List</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference BS_CLASS__VAR_LIST = eINSTANCE.getBSClass_VarList();

		/**
		 * The meta object literal for the '<em><b>Where</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference BS_CLASS__WHERE = eINSTANCE.getBSClass_Where();

		/**
		 * The meta object literal for the '<em><b>Inst Name</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference BS_CLASS__INST_NAME = eINSTANCE.getBSClass_InstName();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.InstNameImpl <em>Inst Name</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.InstNameImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getInstName()
		 * @generated
		 */
		EClass INST_NAME = eINSTANCE.getInstName();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.BSharpBlockImpl <em>Block</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.BSharpBlockImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getBSharpBlock()
		 * @generated
		 */
		EClass BSHARP_BLOCK = eINSTANCE.getBSharpBlock();

		/**
		 * The meta object literal for the '<em><b>Functions</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference BSHARP_BLOCK__FUNCTIONS = eINSTANCE.getBSharpBlock_Functions();

		/**
		 * The meta object literal for the '<em><b>Theorems</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference BSHARP_BLOCK__THEOREMS = eINSTANCE.getBSharpBlock_Theorems();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.GenNameImpl <em>Gen Name</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.GenNameImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getGenName()
		 * @generated
		 */
		EClass GEN_NAME = eINSTANCE.getGenName();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.PolyContextImpl <em>Poly Context</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.PolyContextImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPolyContext()
		 * @generated
		 */
		EClass POLY_CONTEXT = eINSTANCE.getPolyContext();

		/**
		 * The meta object literal for the '<em><b>Poly Types</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference POLY_CONTEXT__POLY_TYPES = eINSTANCE.getPolyContext_PolyTypes();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.PolyTypeImpl <em>Poly Type</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.PolyTypeImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPolyType()
		 * @generated
		 */
		EClass POLY_TYPE = eINSTANCE.getPolyType();

		/**
		 * The meta object literal for the '<em><b>Super Types</b></em>' reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference POLY_TYPE__SUPER_TYPES = eINSTANCE.getPolyType_SuperTypes();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.SuperTypeListImpl <em>Super Type List</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.SuperTypeListImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getSuperTypeList()
		 * @generated
		 */
		EClass SUPER_TYPE_LIST = eINSTANCE.getSuperTypeList();

		/**
		 * The meta object literal for the '<em><b>Super Types</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference SUPER_TYPE_LIST__SUPER_TYPES = eINSTANCE.getSuperTypeList_SuperTypes();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.ConstructedTypeImpl <em>Constructed Type</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.ConstructedTypeImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getConstructedType()
		 * @generated
		 */
		EClass CONSTRUCTED_TYPE = eINSTANCE.getConstructedType();

		/**
		 * The meta object literal for the '<em><b>Constructor</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute CONSTRUCTED_TYPE__CONSTRUCTOR = eINSTANCE.getConstructedType_Constructor();

		/**
		 * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference CONSTRUCTED_TYPE__LEFT = eINSTANCE.getConstructedType_Left();

		/**
		 * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference CONSTRUCTED_TYPE__RIGHT = eINSTANCE.getConstructedType_Right();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypeConstructorImpl <em>Type Constructor</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypeConstructorImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeConstructor()
		 * @generated
		 */
		EClass TYPE_CONSTRUCTOR = eINSTANCE.getTypeConstructor();

		/**
		 * The meta object literal for the '<em><b>Type Name</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_CONSTRUCTOR__TYPE_NAME = eINSTANCE.getTypeConstructor_TypeName();

		/**
		 * The meta object literal for the '<em><b>Context</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_CONSTRUCTOR__CONTEXT = eINSTANCE.getTypeConstructor_Context();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypeConstrBracketImpl <em>Type Constr Bracket</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypeConstrBracketImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeConstrBracket()
		 * @generated
		 */
		EClass TYPE_CONSTR_BRACKET = eINSTANCE.getTypeConstrBracket();

		/**
		 * The meta object literal for the '<em><b>Child</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_CONSTR_BRACKET__CHILD = eINSTANCE.getTypeConstrBracket_Child();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypeDeclContextImpl <em>Type Decl Context</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypeDeclContextImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeDeclContext()
		 * @generated
		 */
		EClass TYPE_DECL_CONTEXT = eINSTANCE.getTypeDeclContext();

		/**
		 * The meta object literal for the '<em><b>Type Name</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_DECL_CONTEXT__TYPE_NAME = eINSTANCE.getTypeDeclContext_TypeName();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.WhereImpl <em>Where</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.WhereImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getWhere()
		 * @generated
		 */
		EClass WHERE = eINSTANCE.getWhere();

		/**
		 * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference WHERE__EXPRESSIONS = eINSTANCE.getWhere_Expressions();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.WrappedInfixImpl <em>Wrapped Infix</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.WrappedInfixImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getWrappedInfix()
		 * @generated
		 */
		EClass WRAPPED_INFIX = eINSTANCE.getWrappedInfix();

		/**
		 * The meta object literal for the '<em><b>Func Name</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference WRAPPED_INFIX__FUNC_NAME = eINSTANCE.getWrappedInfix_FuncName();

		/**
		 * The meta object literal for the '<em><b>Inbuilt</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute WRAPPED_INFIX__INBUILT = eINSTANCE.getWrappedInfix_Inbuilt();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.DatatypeImpl <em>Datatype</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.DatatypeImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getDatatype()
		 * @generated
		 */
		EClass DATATYPE = eINSTANCE.getDatatype();

		/**
		 * The meta object literal for the '<em><b>Constructors</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference DATATYPE__CONSTRUCTORS = eINSTANCE.getDatatype_Constructors();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.DatatypeConstructorImpl <em>Datatype Constructor</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.DatatypeConstructorImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getDatatypeConstructor()
		 * @generated
		 */
		EClass DATATYPE_CONSTRUCTOR = eINSTANCE.getDatatypeConstructor();

		/**
		 * The meta object literal for the '<em><b>Decons</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference DATATYPE_CONSTRUCTOR__DECONS = eINSTANCE.getDatatypeConstructor_Decons();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.ExtendImpl <em>Extend</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.ExtendImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getExtend()
		 * @generated
		 */
		EClass EXTEND = eINSTANCE.getExtend();

		/**
		 * The meta object literal for the '<em><b>Extended Class</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference EXTEND__EXTENDED_CLASS = eINSTANCE.getExtend_ExtendedClass();

		/**
		 * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute EXTEND__NAME = eINSTANCE.getExtend_Name();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.FunctionDeclImpl <em>Function Decl</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.FunctionDeclImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getFunctionDecl()
		 * @generated
		 */
		EClass FUNCTION_DECL = eINSTANCE.getFunctionDecl();

		/**
		 * The meta object literal for the '<em><b>Context</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_DECL__CONTEXT = eINSTANCE.getFunctionDecl_Context();

		/**
		 * The meta object literal for the '<em><b>Var List</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_DECL__VAR_LIST = eINSTANCE.getFunctionDecl_VarList();

		/**
		 * The meta object literal for the '<em><b>Return Type</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_DECL__RETURN_TYPE = eINSTANCE.getFunctionDecl_ReturnType();

		/**
		 * The meta object literal for the '<em><b>Infix</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute FUNCTION_DECL__INFIX = eINSTANCE.getFunctionDecl_Infix();

		/**
		 * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_DECL__EXPR = eINSTANCE.getFunctionDecl_Expr();

		/**
		 * The meta object literal for the '<em><b>Generated Lambdas</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_DECL__GENERATED_LAMBDAS = eINSTANCE.getFunctionDecl_GeneratedLambdas();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.MatchStatementImpl <em>Match Statement</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.MatchStatementImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getMatchStatement()
		 * @generated
		 */
		EClass MATCH_STATEMENT = eINSTANCE.getMatchStatement();

		/**
		 * The meta object literal for the '<em><b>Match</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference MATCH_STATEMENT__MATCH = eINSTANCE.getMatchStatement_Match();

		/**
		 * The meta object literal for the '<em><b>Induct Case</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference MATCH_STATEMENT__INDUCT_CASE = eINSTANCE.getMatchStatement_InductCase();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.MatchCaseImpl <em>Match Case</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.MatchCaseImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getMatchCase()
		 * @generated
		 */
		EClass MATCH_CASE = eINSTANCE.getMatchCase();

		/**
		 * The meta object literal for the '<em><b>Decon Name</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference MATCH_CASE__DECON_NAME = eINSTANCE.getMatchCase_DeconName();

		/**
		 * The meta object literal for the '<em><b>Variables</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference MATCH_CASE__VARIABLES = eINSTANCE.getMatchCase_Variables();

		/**
		 * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference MATCH_CASE__EXPR = eINSTANCE.getMatchCase_Expr();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TheoremBodyImpl <em>Theorem Body</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TheoremBodyImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTheoremBody()
		 * @generated
		 */
		EClass THEOREM_BODY = eINSTANCE.getTheoremBody();

		/**
		 * The meta object literal for the '<em><b>Theorem Decl</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference THEOREM_BODY__THEOREM_DECL = eINSTANCE.getTheoremBody_TheoremDecl();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TheoremDeclImpl <em>Theorem Decl</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TheoremDeclImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTheoremDecl()
		 * @generated
		 */
		EClass THEOREM_DECL = eINSTANCE.getTheoremDecl();

		/**
		 * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute THEOREM_DECL__NAME = eINSTANCE.getTheoremDecl_Name();

		/**
		 * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference THEOREM_DECL__EXPR = eINSTANCE.getTheoremDecl_Expr();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypedVariableListImpl <em>Typed Variable List</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypedVariableListImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypedVariableList()
		 * @generated
		 */
		EClass TYPED_VARIABLE_LIST = eINSTANCE.getTypedVariableList();

		/**
		 * The meta object literal for the '<em><b>Variables Of Type</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPED_VARIABLE_LIST__VARIABLES_OF_TYPE = eINSTANCE.getTypedVariableList_VariablesOfType();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.VariableTypingImpl <em>Variable Typing</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.VariableTypingImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getVariableTyping()
		 * @generated
		 */
		EClass VARIABLE_TYPING = eINSTANCE.getVariableTyping();

		/**
		 * The meta object literal for the '<em><b>Type Var</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference VARIABLE_TYPING__TYPE_VAR = eINSTANCE.getVariableTyping_TypeVar();

		/**
		 * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference VARIABLE_TYPING__TYPE = eINSTANCE.getVariableTyping_Type();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypedVariableImpl <em>Typed Variable</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypedVariableImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypedVariable()
		 * @generated
		 */
		EClass TYPED_VARIABLE = eINSTANCE.getTypedVariable();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.QuantLambdaImpl <em>Quant Lambda</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.QuantLambdaImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getQuantLambda()
		 * @generated
		 */
		EClass QUANT_LAMBDA = eINSTANCE.getQuantLambda();

		/**
		 * The meta object literal for the '<em><b>QType</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute QUANT_LAMBDA__QTYPE = eINSTANCE.getQuantLambda_QType();

		/**
		 * The meta object literal for the '<em><b>Context</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference QUANT_LAMBDA__CONTEXT = eINSTANCE.getQuantLambda_Context();

		/**
		 * The meta object literal for the '<em><b>Var List</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference QUANT_LAMBDA__VAR_LIST = eINSTANCE.getQuantLambda_VarList();

		/**
		 * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference QUANT_LAMBDA__EXPR = eINSTANCE.getQuantLambda_Expr();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.ExpressionImpl <em>Expression</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.ExpressionImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getExpression()
		 * @generated
		 */
		EClass EXPRESSION = eINSTANCE.getExpression();

		/**
		 * The meta object literal for the '<em><b>Type Inst</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference EXPRESSION__TYPE_INST = eINSTANCE.getExpression_TypeInst();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.FunctionCallImpl <em>Function Call</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.FunctionCallImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getFunctionCall()
		 * @generated
		 */
		EClass FUNCTION_CALL = eINSTANCE.getFunctionCall();

		/**
		 * The meta object literal for the '<em><b>Arguments</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_CALL__ARGUMENTS = eINSTANCE.getFunctionCall_Arguments();

		/**
		 * The meta object literal for the '<em><b>Owner Type</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_CALL__OWNER_TYPE = eINSTANCE.getFunctionCall_OwnerType();

		/**
		 * The meta object literal for the '<em><b>Class Var Decl</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_CALL__CLASS_VAR_DECL = eINSTANCE.getFunctionCall_ClassVarDecl();

		/**
		 * The meta object literal for the '<em><b>Context</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_CALL__CONTEXT = eINSTANCE.getFunctionCall_Context();

		/**
		 * The meta object literal for the '<em><b>Wrapped</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FUNCTION_CALL__WRAPPED = eINSTANCE.getFunctionCall_Wrapped();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.ClassVarDeclImpl <em>Class Var Decl</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.ClassVarDeclImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getClassVarDecl()
		 * @generated
		 */
		EClass CLASS_VAR_DECL = eINSTANCE.getClassVarDecl();

		/**
		 * The meta object literal for the '<em><b>Owner Type</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference CLASS_VAR_DECL__OWNER_TYPE = eINSTANCE.getClassVarDecl_OwnerType();

		/**
		 * The meta object literal for the '<em><b>Type Inst</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference CLASS_VAR_DECL__TYPE_INST = eINSTANCE.getClassVarDecl_TypeInst();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.PrefixImpl <em>Prefix</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.PrefixImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getPrefix()
		 * @generated
		 */
		EClass PREFIX = eINSTANCE.getPrefix();

		/**
		 * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute PREFIX__NAME = eINSTANCE.getPrefix_Name();

		/**
		 * The meta object literal for the '<em><b>Elem</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference PREFIX__ELEM = eINSTANCE.getPrefix_Elem();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.BracketImpl <em>Bracket</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.BracketImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getBracket()
		 * @generated
		 */
		EClass BRACKET = eINSTANCE.getBracket();

		/**
		 * The meta object literal for the '<em><b>Child</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference BRACKET__CHILD = eINSTANCE.getBracket_Child();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.ExpressionVariableImpl <em>Expression Variable</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.ExpressionVariableImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getExpressionVariable()
		 * @generated
		 */
		EClass EXPRESSION_VARIABLE = eINSTANCE.getExpressionVariable();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.InstanceImpl <em>Instance</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.InstanceImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getInstance()
		 * @generated
		 */
		EClass INSTANCE = eINSTANCE.getInstance();

		/**
		 * The meta object literal for the '<em><b>Class Name</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference INSTANCE__CLASS_NAME = eINSTANCE.getInstance_ClassName();

		/**
		 * The meta object literal for the '<em><b>Context</b></em>' reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference INSTANCE__CONTEXT = eINSTANCE.getInstance_Context();

		/**
		 * The meta object literal for the '<em><b>Arguments</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference INSTANCE__ARGUMENTS = eINSTANCE.getInstance_Arguments();

		/**
		 * The meta object literal for the '<em><b>Class Name Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute INSTANCE__CLASS_NAME_NAME = eINSTANCE.getInstance_ClassNameName();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.InfixImpl <em>Infix</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.InfixImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getInfix()
		 * @generated
		 */
		EClass INFIX = eINSTANCE.getInfix();

		/**
		 * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference INFIX__LEFT = eINSTANCE.getInfix_Left();

		/**
		 * The meta object literal for the '<em><b>Func Name</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference INFIX__FUNC_NAME = eINSTANCE.getInfix_FuncName();

		/**
		 * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference INFIX__RIGHT = eINSTANCE.getInfix_Right();

		/**
		 * The meta object literal for the '<em><b>Op Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute INFIX__OP_NAME = eINSTANCE.getInfix_OpName();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.InfixFuncImpl <em>Infix Func</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.InfixFuncImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getInfixFunc()
		 * @generated
		 */
		EClass INFIX_FUNC = eINSTANCE.getInfixFunc();

		/**
		 * The meta object literal for the '<em><b>Precedence</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute INFIX_FUNC__PRECEDENCE = eINSTANCE.getInfixFunc_Precedence();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.IVariableProvider <em>IVariable Provider</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.IVariableProvider
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIVariableProvider()
		 * @generated
		 */
		EClass IVARIABLE_PROVIDER = eINSTANCE.getIVariableProvider();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.IPolyTypeProvider <em>IPoly Type Provider</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.IPolyTypeProvider
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIPolyTypeProvider()
		 * @generated
		 */
		EClass IPOLY_TYPE_PROVIDER = eINSTANCE.getIPolyTypeProvider();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.IClassInstance <em>IClass Instance</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.IClassInstance
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIClassInstance()
		 * @generated
		 */
		EClass ICLASS_INSTANCE = eINSTANCE.getIClassInstance();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.IExpressionContainerImpl <em>IExpression Container</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.IExpressionContainerImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIExpressionContainer()
		 * @generated
		 */
		EClass IEXPRESSION_CONTAINER = eINSTANCE.getIExpressionContainer();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.ITheoryImportCacheProviderImpl <em>ITheory Import Cache Provider</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.ITheoryImportCacheProviderImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getITheoryImportCacheProvider()
		 * @generated
		 */
		EClass ITHEORY_IMPORT_CACHE_PROVIDER = eINSTANCE.getITheoryImportCacheProvider();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.ITheoremContainer <em>ITheorem Container</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.ITheoremContainer
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getITheoremContainer()
		 * @generated
		 */
		EClass ITHEOREM_CONTAINER = eINSTANCE.getITheoremContainer();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.IBodyElementsContainer <em>IBody Elements Container</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.IBodyElementsContainer
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIBodyElementsContainer()
		 * @generated
		 */
		EClass IBODY_ELEMENTS_CONTAINER = eINSTANCE.getIBodyElementsContainer();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.IVarType <em>IVar Type</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.IVarType
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getIVarType()
		 * @generated
		 */
		EClass IVAR_TYPE = eINSTANCE.getIVarType();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypeImpl <em>Type</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypeImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getType()
		 * @generated
		 */
		EClass TYPE = eINSTANCE.getType();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TopLevelInstanceImpl <em>Top Level Instance</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TopLevelInstanceImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTopLevelInstance()
		 * @generated
		 */
		EClass TOP_LEVEL_INSTANCE = eINSTANCE.getTopLevelInstance();

		/**
		 * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP_LEVEL_INSTANCE__BLOCK = eINSTANCE.getTopLevelInstance_Block();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.NamedObjectImpl <em>Named Object</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.NamedObjectImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getNamedObject()
		 * @generated
		 */
		EClass NAMED_OBJECT = eINSTANCE.getNamedObject();

		/**
		 * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute NAMED_OBJECT__NAME = eINSTANCE.getNamedObject_Name();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypeBuilderImpl <em>Type Builder</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypeBuilderImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypeBuilder()
		 * @generated
		 */
		EClass TYPE_BUILDER = eINSTANCE.getTypeBuilder();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.TypePowerSetImpl <em>Type Power Set</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.TypePowerSetImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getTypePowerSet()
		 * @generated
		 */
		EClass TYPE_POWER_SET = eINSTANCE.getTypePowerSet();

		/**
		 * The meta object literal for the '<em><b>Child</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_POWER_SET__CHILD = eINSTANCE.getTypePowerSet_Child();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.GlobalImportImpl <em>Global Import</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.GlobalImportImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getGlobalImport()
		 * @generated
		 */
		EClass GLOBAL_IMPORT = eINSTANCE.getGlobalImport();

		/**
		 * The meta object literal for the '<em><b>File Imports</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference GLOBAL_IMPORT__FILE_IMPORTS = eINSTANCE.getGlobalImport_FileImports();

		/**
		 * The meta object literal for the '<em><b>Project</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute GLOBAL_IMPORT__PROJECT = eINSTANCE.getGlobalImport_Project();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.InbuiltInfixImpl <em>Inbuilt Infix</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.InbuiltInfixImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getInbuiltInfix()
		 * @generated
		 */
		EClass INBUILT_INFIX = eINSTANCE.getInbuiltInfix();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.FileImportImpl <em>File Import</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.FileImportImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getFileImport()
		 * @generated
		 */
		EClass FILE_IMPORT = eINSTANCE.getFileImport();

		/**
		 * The meta object literal for the '<em><b>File Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute FILE_IMPORT__FILE_NAME = eINSTANCE.getFileImport_FileName();

		/**
		 * The meta object literal for the '<em><b>File Reference</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference FILE_IMPORT__FILE_REFERENCE = eINSTANCE.getFileImport_FileReference();

		/**
		 * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute FILE_IMPORT__TYPE = eINSTANCE.getFileImport_Type();

		/**
		 * The meta object literal for the '{@link ac.soton.bsharp.bSharp.impl.LocalImportImpl <em>Local Import</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see ac.soton.bsharp.bSharp.impl.LocalImportImpl
		 * @see ac.soton.bsharp.bSharp.impl.BSharpPackageImpl#getLocalImport()
		 * @generated
		 */
		EClass LOCAL_IMPORT = eINSTANCE.getLocalImport();

		/**
		 * The meta object literal for the '<em><b>File Imports</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference LOCAL_IMPORT__FILE_IMPORTS = eINSTANCE.getLocalImport_FileImports();

	}

} //BSharpPackage
