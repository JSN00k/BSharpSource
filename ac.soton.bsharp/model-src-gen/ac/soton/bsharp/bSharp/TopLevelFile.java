/**
 * generated by Xtext 2.14.0
 */
package ac.soton.bsharp.bSharp;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Top Level File</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link ac.soton.bsharp.bSharp.TopLevelFile#getName <em>Name</em>}</li>
 *   <li>{@link ac.soton.bsharp.bSharp.TopLevelFile#getImports <em>Imports</em>}</li>
 *   <li>{@link ac.soton.bsharp.bSharp.TopLevelFile#getClasses <em>Classes</em>}</li>
 *   <li>{@link ac.soton.bsharp.bSharp.TopLevelFile#getExtends <em>Extends</em>}</li>
 *   <li>{@link ac.soton.bsharp.bSharp.TopLevelFile#getInstances <em>Instances</em>}</li>
 * </ul>
 *
 * @see ac.soton.bsharp.bSharp.BSharpPackage#getTopLevelFile()
 * @model
 * @generated
 */
public interface TopLevelFile extends EObject {
	/**
	 * Returns the value of the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Name</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Name</em>' attribute.
	 * @see #setName(String)
	 * @see ac.soton.bsharp.bSharp.BSharpPackage#getTopLevelFile_Name()
	 * @model id="true"
	 * @generated
	 */
	String getName();

	/**
	 * Sets the value of the '{@link ac.soton.bsharp.bSharp.TopLevelFile#getName <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Name</em>' attribute.
	 * @see #getName()
	 * @generated
	 */
	void setName(String value);

	/**
	 * Returns the value of the '<em><b>Imports</b></em>' containment reference list.
	 * The list contents are of type {@link ac.soton.bsharp.bSharp.ImportStatement}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Imports</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Imports</em>' containment reference list.
	 * @see ac.soton.bsharp.bSharp.BSharpPackage#getTopLevelFile_Imports()
	 * @model containment="true"
	 * @generated
	 */
	EList<ImportStatement> getImports();

	/**
	 * Returns the value of the '<em><b>Classes</b></em>' containment reference list.
	 * The list contents are of type {@link ac.soton.bsharp.bSharp.ClassDecl}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Classes</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Classes</em>' containment reference list.
	 * @see ac.soton.bsharp.bSharp.BSharpPackage#getTopLevelFile_Classes()
	 * @model containment="true"
	 * @generated
	 */
	EList<ClassDecl> getClasses();

	/**
	 * Returns the value of the '<em><b>Extends</b></em>' containment reference list.
	 * The list contents are of type {@link ac.soton.bsharp.bSharp.Extend}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Extends</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Extends</em>' containment reference list.
	 * @see ac.soton.bsharp.bSharp.BSharpPackage#getTopLevelFile_Extends()
	 * @model containment="true"
	 * @generated
	 */
	EList<Extend> getExtends();

	/**
	 * Returns the value of the '<em><b>Instances</b></em>' containment reference list.
	 * The list contents are of type {@link ac.soton.bsharp.bSharp.Instance}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Instances</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Instances</em>' containment reference list.
	 * @see ac.soton.bsharp.bSharp.BSharpPackage#getTopLevelFile_Instances()
	 * @model containment="true"
	 * @generated
	 */
	EList<Instance> getInstances();

} // TopLevelFile
